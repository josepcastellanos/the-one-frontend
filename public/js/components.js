//Creating the Vue object.
const rootComponent = {
  data() {
   return{
     Premenu: false,
     pressed: false,
     dataReport: "Charging",
     Nsim: 1,
     Dselected: 1,
     Rselected: 1,
     dataG: null,
     OneConfig: [{
       sTime: 43200,
       tRange: 10,
       tSpeed: "250k",

       Grout: "EpidemicRouter",
       nGroups: "1",
       G1_ID: "c",
       G1_nH: "60",
       G1_rF: "data/tram3.wkt",
       G1_rT: "1",
       G2_ID: "p",
       G2_nH: "60",
       G2_rF: "data/tram4.wkt",
       G2_rT: "2",
       G3_ID: "w",
       G3_nH: "60",
       G3_rF: "data/tram10.wkt",
       G3_rT: "1",

       PreL: "13000",

       gHosts: 60,
       gBuffer: "5M",
       wTime: "0, 120",
       gTTL: 300,
       gSpeed: "0.5, 1.5",
       wSize: "4500, 3400",
       mInterval: "25, 35",
       mSize: "500k, 1M",
       traces: "None"
     }],


   }
 },
 methods: {
   Confirm: function(){
     this.Premenu=true;
   },
   Cancel: function(){

   },
   Start: function(){
      this.pressed=true;
      this.Premenu=false;

      const a=JSON.parse(JSON.stringify(this.OneConfig))
      fetch('/Start', {
        method: "POST",
        headers: {
           "Content-Type": "application/json"
         },
        body: JSON.stringify(a),
      })
      .then(response => response.json())
      .then(aJson => {
        //Bucle for segun número de simulacones, se genera
        this.dataReport=aJson

        console.log(aJson.length)
        let data = {
            labels: null,
            datasets: [
                {

                },

            ]
        }
        let time=0;
        for (let i=0; i<aJson.length; i++) {
          let resProb=[]
          let resTime=[]
          resProb[i]=aJson[i].map(function(point, index) {
                if (index==0){
                  return 0
                } else if(point!=""){
                  if (point<0){
                    return 0
                  }
                  return point[3]*100
                } else{
                  return
                }
              })

          resTime[i]=aJson[i].map(function(point, index) {
                    if (index==0){
                      return "0"
                    } else if(point!=""){
                      return point[0]
                    } else{
                      return
                    }

                  })
          if(aJson[i].length>time){
            time=aJson[i].length
            data.labels=resTime[i]
          }

          data.datasets[i]=  {
                name: aJson[i][0],
                chartType: "line",
                values: resProb[i]
            }
        }

        this.dataG=data



      })

    }, // end sendact
    nSimU: function(conf, v) {
      let a=this.OneConfig
      a[v]=conf
      this.OneConfig=[]
      this.OneConfig=a
      //vm.OneConfig.splice(v, 1, conf)
      //this.OneConfig.splice(v, 1, conf)
      //Vue.set(this.OneConfig, v, conf)

      this.$forceUpdate();
      if (conf.traces!="None"){
        console.log("uwu")

        //AWUI CONFIG TRACES!!!
      }

    },
    dConfig: function(all){
      //SELECT DEL REPORT Y CONFIG, Y PEDIR AL BACK ESE CONFIG/REPORT CONTENT, METER EN UNA VARIABLE, Y DESCARGAR ASÍ.
      if (all==1){
        const b=JSON.parse(JSON.stringify(this.OneConfig))
        fetch('/GenConfig', {
          method: "POST",
          headers: {
             "Content-Type": "application/json"
           },
          body: JSON.stringify(b),
        })
        .then(response => console.log("b"))

        var a={number: "all", total: this.Nsim}
      } else {
        var a={number: this.Dselected}
      }
      setTimeout(()=> {
        fetch('/downloadConfig', {
          method: "POST",
          headers: {
             "Content-Type": "application/json"
           },

          body: JSON.stringify(a),
        })
        .then(response => response.json())
        .then(aJson => {
          //console.log(aJson)
          var blob = new Blob([ aJson ], { "type" : "text/plain" });
          let link = document.createElement('a')
          link.href = window.URL.createObjectURL(blob)
          if(this.Premenu){
            link.download = 'Configs.txt'
          } else{
            link.download = this.Dselected+'_config.txt'
          }
          link.click()
          this.Premenu=false;
          //this.dataReport=JSON.stringify(aJson);
        })

      }, 500)


    },
    dReport: function(){
      var a={number: this.Rselected}
      fetch('/downloadRep', {
        method: "POST",
        headers: {
           "Content-Type": "application/json"
         },

        body: JSON.stringify(a),
      })
      .then(response => response.json())
      .then(aJson => {
        //console.log(aJson)
        var blob = new Blob([ aJson ], { "type" : "text/plain" });
        let link = document.createElement('a')
        link.href = window.URL.createObjectURL(blob)
        link.download = this.Rselected+'_report.txt'
        link.click()
        //this.dataReport=JSON.stringify(aJson);
      })


    },
    graph: function(){
      let res=[ 5, [ "32.0000", "1", "0", "0.0000" ], [ "58.0000", "2", "0", "0.0000" ], [ "84.0000", "3", "0", "0.0000" ], [ "112.0000", "4", "0", "0.0000" ], [ "144.0000", "5", "0", "0.0000" ], [ "170.0000", "6", "0", "0.0000" ], [ "203.0000", "7", "0", "0.0000" ], [ "233.0000", "8", "0", "0.0000" ], [ "265.0000", "9", "0", "0.0000" ], [ "291.0000", "10", "0", "0.0000" ], [ "320.0000", "11", "0", "0.0000" ], [ "345.0000", "12", "0", "0.0000" ], [ "379.0000", "13", "0", "0.0000" ], [ "405.0000", "14", "0", "0.0000" ], [ "431.0000", "15", "0", "0.0000" ], [ "464.0000", "16", "0", "0.0000" ], [ "489.4000", "16", "1", "0.0625" ], [ "498.0000", "17", "1", "0.0588" ], [ "523.0000", "18", "1", "0.0556" ], [ "557.0000", "19", "1", "0.0526" ], [ "582.0000", "20", "1", "0.0500" ], [ "609.0000", "21", "1", "0.0476" ], [ "640.0000", "22", "1", "0.0455" ], [ "669.0000", "23", "1", "0.0435" ], [ "698.0000", "24", "1", "0.0417" ], [ "730.0000", "25", "1", "0.0400" ], [ "757.0000", "26", "1", "0.0385" ], [ "785.0000", "27", "1", "0.0370" ], [ "818.0000", "28", "1", "0.0357" ], [ "852.0000", "29", "1", "0.0345" ], [ "881.0000", "30", "1", "0.0333" ], [ "913.0000", "31", "1", "0.0323" ], [ "945.0000", "32", "1", "0.0313" ], [ "976.0000", "33", "1", "0.0303" ], [ "1007.0000", "34", "1", "0.0294" ], [ "1035.0000", "35", "1", "0.0286" ], [ "1060.0000", "36", "1", "0.0278" ], [ "1092.0000", "37", "1", "0.0270" ], [ "1121.0000", "38", "1", "0.0263" ], [ "1154.0000", "39", "1", "0.0256" ], [ "1184.0000", "40", "1", "0.0250" ], [ "1216.0000", "41", "1", "0.0244" ], [ "1249.0000", "42", "1", "0.0238" ], [ "1281.0000", "43", "1", "0.0233" ], [ "1313.0000", "44", "1", "0.0227" ], [ "1345.0000", "45", "1", "0.0222" ], [ "1378.0000", "46", "1", "0.0217" ], [ "1411.0000", "47", "1", "0.0213" ], [ "1437.0000", "48", "1", "0.0208" ], [ "1465.0000", "49", "1", "0.0204" ], [ "1498.0000", "50", "1", "0.0200" ], [ "1528.0000", "51", "1", "0.0196" ], [ "1560.0000", "52", "1", "0.0192" ], [ "1586.0000", "53", "1", "0.0189" ], [ "1617.0000", "54", "1", "0.0185" ], [ "1646.0000", "55", "1", "0.0182" ], [ "1677.0000", "56", "1", "0.0179" ], [ "1707.0000", "57", "1", "0.0175" ], [ "1739.0000", "58", "1", "0.0172" ], [ "1769.0000", "59", "1", "0.0169" ], [ "1801.0000", "60", "1", "0.0167" ], [ "1826.0000", "61", "1", "0.0164" ], [ "1852.0000", "62", "1", "0.0161" ], [ "1881.0000", "63", "1", "0.0159" ], [ "1908.0000", "64", "1", "0.0156" ], [ "1937.0000", "65", "1", "0.0154" ], [ "1968.0000", "66", "1", "0.0152" ], [ "1997.0000", "67", "1", "0.0149" ], [ "2022.0000", "68", "1", "0.0147" ], [ "2046.8000", "68", "2", "0.0294" ], [ "2054.0000", "69", "2", "0.0290" ], [ "2088.0000", "70", "2", "0.0286" ], [ "2117.0000", "71", "2", "0.0282" ], [ "2142.0000", "72", "2", "0.0278" ], [ "2173.0000", "73", "2", "0.0274" ], [ "2199.0000", "74", "2", "0.0270" ], [ "2229.0000", "75", "2", "0.0267" ], [ "2260.0000", "76", "2", "0.0263" ], [ "2288.0000", "77", "2", "0.0260" ], [ "2305.5000", "77", "3", "0.0390" ], [ "2322.0000", "78", "3", "0.0385" ], [ "2352.0000", "79", "3", "0.0380" ], [ "2377.0000", "80", "3", "0.0375" ], [ "2410.0000", "81", "3", "0.0370" ], [ "2440.0000", "82", "3", "0.0366" ], [ "2467.0000", "83", "3", "0.0361" ], [ "2492.0000", "84", "3", "0.0357" ], [ "2523.0000", "85", "3", "0.0353" ], [ "2555.0000", "86", "3", "0.0349" ], [ "2583.0000", "87", "3", "0.0345" ], [ "2617.0000", "88", "3", "0.0341" ], [ "2650.0000", "89", "3", "0.0337" ], [ "2681.0000", "90", "3", "0.0333" ], [ "2714.0000", "91", "3", "0.0330" ], [ "2746.0000", "92", "3", "0.0326" ], [ "2779.0000", "93", "3", "0.0323" ], [ "2810.0000", "94", "3", "0.0319" ], [ "2840.0000", "95", "3", "0.0316" ], [ "2851.0000", "95", "4", "0.0421" ], [ "2871.0000", "96", "4", "0.0417" ], [ "2899.0000", "97", "4", "0.0412" ], [ "2928.0000", "98", "4", "0.0408" ], [ "2955.0000", "99", "4", "0.0404" ], [ "2980.0000", "100", "4", "0.0400" ], [ "3012.0000", "101", "4", "0.0396" ], [ "3044.0000", "102", "4", "0.0392" ], [ "3071.0000", "103", "4", "0.0388" ], [ "3104.0000", "104", "4", "0.0385" ], [ "3125.5000", "104", "5", "0.0481" ], [ "3130.0000", "105", "5", "0.0476" ], [ "3155.0000", "106", "5", "0.0472" ], [ "3189.0000", "107", "5", "0.0467" ], [ "3219.0000", "108", "5", "0.0463" ], [ "3246.5000", "108", "6", "0.0556" ], [ "3251.0000", "109", "6", "0.0550" ], [ "3278.0000", "110", "6", "0.0545" ], [ "3300.6000", "110", "7", "0.0636" ], [ "3309.0000", "111", "7", "0.0631" ], [ "3342.0000", "112", "7", "0.0625" ], [ "3370.0000", "113", "7", "0.0619" ], [ "3399.0000", "114", "7", "0.0614" ], [ "3425.0000", "115", "7", "0.0609" ], [ "3455.0000", "116", "7", "0.0603" ], [ "3484.0000", "117", "7", "0.0598" ], [ "3515.0000", "118", "7", "0.0593" ], [ "3544.0000", "119", "7", "0.0588" ], [ "3577.0000", "120", "7", "0.0583" ], [ "3606.0000", "121", "7", "0.0579" ], [ "3631.0000", "122", "7", "0.0574" ], [ "3663.0000", "123", "7", "0.0569" ], [ "3692.0000", "124", "7", "0.0565" ], [ "3716.4000", "124", "8", "0.0645" ], [ "3724.0000", "125", "8", "0.0640" ], [ "3756.0000", "126", "8", "0.0635" ], [ "3781.0000", "127", "8", "0.0630" ], [ "3806.0000", "128", "8", "0.0625" ], [ "3836.0000", "129", "8", "0.0620" ], [ "3863.0000", "130", "8", "0.0615" ], [ "3896.0000", "131", "8", "0.0611" ], [ "3921.0000", "132", "8", "0.0606" ], [ "3951.0000", "133", "8", "0.0602" ], [ "3981.0000", "134", "8", "0.0597" ], [ "4012.0000", "135", "8", "0.0593" ], [ "4038.0000", "136", "8", "0.0588" ], [ "4063.0000", "137", "8", "0.0584" ], [ "4096.0000", "138", "8", "0.0580" ], [ "4125.0000", "139", "8", "0.0576" ], [ "4154.0000", "140", "8", "0.0571" ], [ "4181.0000", "141", "8", "0.0567" ], [ "4183.2000", "141", "9", "0.0638" ], [ "4202.9000", "141", "10", "0.0709" ], [ "4208.0000", "142", "10", "0.0704" ], [ "4237.0000", "143", "10", "0.0699" ], [ "4271.0000", "144", "10", "0.0694" ], [ "4303.0000", "145", "10", "0.0690" ], [ "4328.0000", "146", "10", "0.0685" ], [ "4361.0000", "147", "10", "0.0680" ], [ "4391.0000", "148", "10", "0.0676" ], [ "4416.0000", "149", "10", "0.0671" ], [ "4442.0000", "150", "10", "0.0667" ], [ "4472.0000", "151", "10", "0.0662" ], [ "4499.0000", "152", "10", "0.0658" ], [ "4533.0000", "153", "10", "0.0654" ], [ "4543.0000", "153", "11", "0.0719" ], [ "4564.0000", "154", "11", "0.0714" ], [ "4581.4000", "154", "12", "0.0779" ], [ "4590.0000", "155", "12", "0.0774" ], [ "4624.0000", "156", "12", "0.0769" ], [ "4656.0000", "157", "12", "0.0764" ], [ "4690.0000", "158", "12", "0.0759" ], [ "4719.0000", "159", "12", "0.0755" ], [ "4747.0000", "160", "12", "0.0750" ], [ "4775.6000", "160", "13", "0.0813" ], [ "4776.0000", "161", "13", "0.0807" ], [ "4810.0000", "162", "13", "0.0802" ], [ "4840.0000", "163", "13", "0.0798" ], [ "4865.0000", "164", "13", "0.0793" ], [ "4871.4000", "164", "14", "0.0854" ], [ "4893.0000", "165", "14", "0.0848" ], [ "4912.3000", "165", "15", "0.0909" ], [ "4920.0000", "166", "15", "0.0904" ], [ "4953.0000", "167", "15", "0.0898" ], [ "4985.0000", "168", "15", "0.0893" ], [ "5011.0000", "169", "15", "0.0888" ], [ "5044.0000", "170", "15", "0.0882" ], [ "5075.0000", "171", "15", "0.0877" ], [ "5105.0000", "172", "15", "0.0872" ], [ "5138.0000", "173", "15", "0.0867" ], [ "5150.2000", "173", "16", "0.0925" ], [ "5169.0000", "174", "16", "0.0920" ], [ "5201.8000", "174", "17", "0.0977" ], [ "5202.0000", "175", "17", "0.0971" ], [ "5232.0000", "176", "17", "0.0966" ], [ "5262.0000", "177", "17", "0.0960" ], [ "5295.0000", "178", "17", "0.0955" ], [ "5324.0000", "179", "17", "0.0950" ], [ "5358.0000", "180", "17", "0.0944" ], [ "5385.0000", "181", "17", "0.0939" ], [ "5410.0000", "182", "17", "0.0934" ], [ "5438.0000", "183", "17", "0.0929" ], [ "5449.5000", "183", "18", "0.0984" ], [ "5463.0000", "184", "18", "0.0978" ], [ "5493.0000", "185", "18", "0.0973" ], [ "5523.0000", "186", "18", "0.0968" ], [ "5550.0000", "187", "18", "0.0963" ], [ "5581.0000", "188", "18", "0.0957" ], [ "5611.0000", "189", "18", "0.0952" ], [ "5611.7000", "189", "19", "0.1005" ], [ "5643.0000", "190", "19", "0.1000" ], [ "5677.0000", "191", "19", "0.0995" ], [ "5685.2000", "191", "20", "0.1047" ], [ "5707.0000", "192", "20", "0.1042" ], [ "5735.0000", "193", "20", "0.1036" ], [ "5766.0000", "194", "20", "0.1031" ], [ "5792.0000", "195", "20", "0.1026" ], [ "5805.0000", "195", "21", "0.1077" ], [ "5826.0000", "196", "21", "0.1071" ], [ "5856.0000", "197", "21", "0.1066" ], [ "5880.1000", "197", "22", "0.1117" ], [ "5887.0000", "198", "22", "0.1111" ], [ "5919.0000", "199", "22", "0.1106" ], [ "5953.0000", "200", "22", "0.1100" ], [ "5981.0000", "201", "22", "0.1095" ], [ "6008.0000", "202", "22", "0.1089" ], [ "6039.0000", "203", "22", "0.1084" ], [ "6068.0000", "204", "22", "0.1078" ], [ "6098.0000", "205", "22", "0.1073" ], [ "6124.0000", "206", "22", "0.1068" ], [ "6156.0000", "207", "22", "0.1063" ], [ "6187.0000", "208", "22", "0.1058" ], [ "6217.0000", "209", "22", "0.1053" ], [ "6242.0000", "210", "22", "0.1048" ], [ "6271.0000", "211", "22", "0.1043" ], [ "6296.0000", "212", "22", "0.1038" ], [ "6322.7000", "212", "23", "0.1085" ], [ "6325.0000", "213", "23", "0.1080" ], [ "6358.0000", "214", "23", "0.1075" ], [ "6387.0000", "215", "23", "0.1070" ], [ "6396.2000", "215", "24", "0.1116" ], [ "6418.0000", "216", "24", "0.1111" ], [ "6449.0000", "217", "24", "0.1106" ], [ "6465.7000", "217", "25", "0.1152" ], [ "6477.0000", "218", "25", "0.1147" ], [ "6505.0000", "219", "25", "0.1142" ], [ "6535.0000", "220", "25", "0.1136" ], [ "6568.0000", "221", "25", "0.1131" ], [ "6602.0000", "222", "25", "0.1126" ], [ "6602.3000", "222", "26", "0.1171" ], [ "6632.0000", "223", "26", "0.1166" ], [ "6638.6000", "223", "27", "0.1211" ], [ "6641.6000", "223", "28", "0.1256" ], [ "6660.0000", "224", "28", "0.1250" ], [ "6687.0000", "225", "28", "0.1244" ], [ "6715.0000", "226", "28", "0.1239" ], [ "6742.0000", "227", "28", "0.1233" ], [ "6776.0000", "228", "28", "0.1228" ], [ "6803.0000", "229", "28", "0.1223" ], [ "6832.0000", "230", "28", "0.1217" ], [ "6863.0000", "231", "28", "0.1212" ], [ "6896.0000", "232", "28", "0.1207" ], [ "6921.0000", "233", "28", "0.1202" ], [ "6947.1000", "233", "29", "0.1245" ], [ "6952.0000", "234", "29", "0.1239" ], [ "6966.3000", "234", "30", "0.1282" ], [ "6977.0000", "235", "30", "0.1277" ], [ "6993.6000", "235", "31", "0.1319" ], [ "7011.0000", "236", "31", "0.1314" ], [ "7038.0000", "237", "31", "0.1308" ], [ "7063.0000", "237", "32", "0.1350" ], [ "7068.0000", "238", "32", "0.1345" ], [ "7102.0000", "239", "32", "0.1339" ], [ "7136.0000", "240", "32", "0.1333" ], [ "7163.0000", "241", "32", "0.1328" ], [ "7194.0000", "242", "32", "0.1322" ], [ "7219.0000", "243", "32", "0.1317" ], [ "7246.5000", "243", "33", "0.1358" ], [ "7253.0000", "244", "33", "0.1352" ], [ "7287.0000", "245", "33", "0.1347" ], [ "7312.9000", "245", "34", "0.1388" ], [ "7321.0000", "246", "34", "0.1382" ], [ "7349.0000", "247", "34", "0.1377" ], [ "7377.6000", "247", "35", "0.1417" ], [ "7379.0000", "248", "35", "0.1411" ], [ "7403.7000", "248", "36", "0.1452" ], [ "7405.0000", "249", "36", "0.1446" ], [ "7434.0000", "250", "36", "0.1440" ], [ "7435.3000", "250", "37", "0.1480" ], [ "7462.0000", "251", "37", "0.1474" ], [ "7489.0000", "252", "37", "0.1468" ], [ "7519.0000", "253", "37", "0.1462" ], [ "7525.6000", "253", "38", "0.1502" ], [ "7550.0000", "254", "38", "0.1496" ], [ "7584.0000", "255", "38", "0.1490" ], [ "7615.0000", "256", "38", "0.1484" ], [ "7644.0000", "257", "38", "0.1479" ], [ "7672.0000", "258", "38", "0.1473" ], [ "7685.8000", "258", "39", "0.1512" ], [ "7703.0000", "259", "39", "0.1506" ], [ "7726.5000", "259", "40", "0.1544" ], [ "7728.0000", "260", "40", "0.1538" ], [ "7735.4000", "260", "41", "0.1577" ], [ "7754.0000", "261", "41", "0.1571" ], [ "7786.0000", "262", "41", "0.1565" ], [ "7813.0000", "263", "41", "0.1559" ], [ "7841.0000", "264", "41", "0.1553" ], [ "7866.0000", "265", "41", "0.1547" ], [ "7871.8000", "265", "42", "0.1585" ], [ "7894.0000", "266", "42", "0.1579" ], [ "7927.0000", "267", "42", "0.1573" ], [ "7954.0000", "268", "42", "0.1567" ], [ "7984.0000", "269", "42", "0.1561" ], [ "8013.0000", "270", "42", "0.1556" ], [ "8038.0000", "271", "42", "0.1550" ], [ "8071.0000", "272", "42", "0.1544" ], [ "8096.0000", "273", "42", "0.1538" ], [ "8124.0000", "274", "42", "0.1533" ], [ "8155.0000", "275", "42", "0.1527" ], [ "8188.0000", "276", "42", "0.1522" ], [ "8215.0000", "277", "42", "0.1516" ], [ "8248.0000", "278", "42", "0.1511" ], [ "8273.0000", "279", "42", "0.1505" ], [ "8299.0000", "280", "42", "0.1500" ], [ "8325.0000", "281", "42", "0.1495" ], [ "8351.0000", "282", "42", "0.1489" ], [ "8379.0000", "283", "42", "0.1484" ], [ "8406.0000", "284", "42", "0.1479" ], [ "8408.3000", "284", "43", "0.1514" ], [ "8439.0000", "285", "43", "0.1509" ], [ "8467.0000", "286", "43", "0.1503" ], [ "8498.0000", "287", "43", "0.1498" ], [ "8525.0000", "288", "43", "0.1493" ], [ "8554.0000", "289", "43", "0.1488" ], [ "8586.0000", "290", "43", "0.1483" ], [ "8619.0000", "291", "43", "0.1478" ], [ "8646.0000", "292", "43", "0.1473" ], [ "8671.0000", "293", "43", "0.1468" ], [ "8705.0000", "294", "43", "0.1463" ], [ "8730.0000", "295", "43", "0.1458" ], [ "8761.0000", "296", "43", "0.1453" ], [ "8788.0000", "297", "43", "0.1448" ], [ "8817.0000", "298", "43", "0.1443" ], [ "8844.0000", "299", "43", "0.1438" ], [ "8874.0000", "300", "43", "0.1433" ], [ "8905.0000", "301", "43", "0.1429" ], [ "8938.0000", "302", "43", "0.1424" ], [ "8970.0000", "303", "43", "0.1419" ], [ "8997.0000", "304", "43", "0.1414" ], [ "9022.0000", "305", "43", "0.1410" ], [ "9056.0000", "306", "43", "0.1405" ], [ "9081.0000", "307", "43", "0.1401" ], [ "9115.0000", "308", "43", "0.1396" ], [ "9146.0000", "309", "43", "0.1392" ], [ "9180.0000", "310", "43", "0.1387" ], [ "9207.0000", "311", "43", "0.1383" ], [ "9232.0000", "312", "43", "0.1378" ], [ "9235.1000", "312", "44", "0.1410" ], [ "9264.0000", "313", "44", "0.1406" ], [ "9293.0000", "314", "44", "0.1401" ], [ "9325.0000", "315", "44", "0.1397" ], [ "9356.0000", "316", "44", "0.1392" ], [ "9387.0000", "317", "44", "0.1388" ], [ "9416.0000", "318", "44", "0.1384" ], [ "9434.1000", "318", "45", "0.1415" ], [ "9445.0000", "319", "45", "0.1411" ], [ "9475.0000", "320", "45", "0.1406" ], [ "9509.0000", "321", "45", "0.1402" ], [ "9541.0000", "322", "45", "0.1398" ], [ "9574.0000", "323", "45", "0.1393" ], [ "9608.0000", "324", "45", "0.1389" ], [ "9642.0000", "325", "45", "0.1385" ], [ "9676.0000", "326", "45", "0.1380" ], [ "9697.9000", "326", "46", "0.1411" ], [ "9710.0000", "327", "46", "0.1407" ], [ "9742.0000", "328", "46", "0.1402" ], [ "9770.0000", "329", "46", "0.1398" ], [ "9795.0000", "330", "46", "0.1394" ], [ "9826.0000", "331", "46", "0.1390" ], [ "9856.0000", "332", "46", "0.1386" ], [ "9889.0000", "333", "46", "0.1381" ], [ "9923.0000", "334", "46", "0.1377" ], [ "9951.0000", "335", "46", "0.1373" ], [ "9955.2000", "335", "47", "0.1403" ], [ "9977.0000", "336", "47", "0.1399" ], [ "9988.7000", "336", "48", "0.1429" ], [ "10002.0000", "337", "48", "0.1424" ], [ "10036.0000", "338", "48", "0.1420" ], [ "10070.0000", "339", "48", "0.1416" ], [ "10101.0000", "340", "48", "0.1412" ], [ "10126.0000", "341", "48", "0.1408" ], [ "10158.0000", "342", "48", "0.1404" ], [ "10186.0000", "343", "48", "0.1399" ], [ "10218.0000", "344", "48", "0.1395" ], [ "10247.0000", "345", "48", "0.1391" ], [ "10274.0000", "346", "48", "0.1387" ], [ "10302.0000", "347", "48", "0.1383" ], [ "10330.0000", "348", "48", "0.1379" ], [ "10356.0000", "349", "48", "0.1375" ], [ "10388.0000", "350", "48", "0.1371" ], [ "10415.0000", "351", "48", "0.1368" ], [ "10444.0000", "352", "48", "0.1364" ], [ "10459.3000", "352", "49", "0.1392" ], [ "10470.0000", "353", "49", "0.1388" ], [ "10496.0000", "354", "49", "0.1384" ], [ "10522.0000", "355", "49", "0.1380" ], [ "10549.0000", "356", "49", "0.1376" ], [ "10576.0000", "357", "49", "0.1373" ], [ "10608.0000", "358", "49", "0.1369" ], [ "10637.0000", "359", "49", "0.1365" ], [ "10671.0000", "360", "49", "0.1361" ], [ "10698.0000", "361", "49", "0.1357" ], [ "10732.0000", "362", "49", "0.1354" ], [ "10762.0000", "363", "49", "0.1350" ], [ "10795.0000", "364", "49", "0.1346" ], [ "10811.7000", "364", "50", "0.1374" ], [ "10821.0000", "365", "50", "0.1370" ], [ "10853.0000", "366", "50", "0.1366" ], [ "10885.0000", "367", "50", "0.1362" ], [ "10914.0000", "368", "50", "0.1359" ], [ "10941.0000", "369", "50", "0.1355" ], [ "10974.0000", "370", "50", "0.1351" ], [ "11001.0000", "371", "50", "0.1348" ], [ "11027.0000", "372", "50", "0.1344" ], [ "11055.0000", "373", "50", "0.1340" ], [ "11087.0000", "374", "50", "0.1337" ], [ "11119.0000", "375", "50", "0.1333" ], [ "11150.0000", "376", "50", "0.1330" ], [ "11183.0000", "377", "50", "0.1326" ], [ "11210.0000", "378", "50", "0.1323" ], [ "11244.0000", "379", "50", "0.1319" ], [ "11269.0000", "380", "50", "0.1316" ], [ "11302.0000", "381", "50", "0.1312" ], [ "11330.0000", "382", "50", "0.1309" ], [ "11359.0000", "383", "50", "0.1305" ], [ "11388.0000", "384", "50", "0.1302" ], [ "11420.0000", "385", "50", "0.1299" ], [ "11449.0000", "386", "50", "0.1295" ], [ "11474.0000", "387", "50", "0.1292" ], [ "11504.0000", "388", "50", "0.1289" ], [ "11534.0000", "389", "50", "0.1285" ], [ "11567.0000", "390", "50", "0.1282" ], [ "11598.0000", "391", "50", "0.1279" ], [ "11626.0000", "391", "51", "0.1304" ], [ "11632.0000", "392", "51", "0.1301" ], [ "11662.0000", "393", "51", "0.1298" ], [ "11695.0000", "394", "51", "0.1294" ], [ "11728.0000", "395", "51", "0.1291" ], [ "11740.8000", "395", "52", "0.1316" ], [ "11754.0000", "396", "52", "0.1313" ], [ "11783.0000", "397", "52", "0.1310" ], [ "11812.0000", "398", "52", "0.1307" ], [ "11841.0000", "399", "52", "0.1303" ], [ "11867.0000", "400", "52", "0.1300" ], [ "11901.0000", "401", "52", "0.1297" ], [ "11929.0000", "402", "52", "0.1294" ], [ "11940.8000", "402", "53", "0.1318" ], [ "11955.0000", "403", "53", "0.1315" ], [ "11965.6000", "403", "54", "0.1340" ], [ "11989.0000", "404", "54", "0.1337" ], [ "12018.0000", "405", "54", "0.1333" ], [ "12050.0000", "406", "54", "0.1330" ], [ "12084.0000", "407", "54", "0.1327" ], [ "12116.0000", "408", "54", "0.1324" ], [ "12147.0000", "409", "54", "0.1320" ], [ "12172.0000", "410", "54", "0.1317" ], [ "12198.0000", "411", "54", "0.1314" ], [ "12210.5000", "411", "55", "0.1338" ], [ "12231.0000", "412", "55", "0.1335" ], [ "12264.0000", "413", "55", "0.1332" ], [ "12297.0000", "414", "55", "0.1329" ], [ "12297.2000", "414", "56", "0.1353" ], [ "12325.0000", "415", "56", "0.1349" ], [ "12350.0000", "416", "56", "0.1346" ], [ "12381.0000", "417", "56", "0.1343" ], [ "12405.1000", "417", "57", "0.1367" ], [ "12410.0000", "418", "57", "0.1364" ], [ "12437.0000", "419", "57", "0.1360" ], [ "12456.3000", "419", "58", "0.1384" ], [ "12470.0000", "420", "58", "0.1381" ], [ "12473.9000", "420", "59", "0.1405" ], [ "12498.7000", "420", "60", "0.1429" ], [ "12503.0000", "421", "60", "0.1425" ], [ "12534.0000", "422", "60", "0.1422" ], [ "12561.0000", "423", "60", "0.1418" ], [ "12587.0000", "424", "60", "0.1415" ], [ "12614.0000", "425", "60", "0.1412" ], [ "12641.0000", "426", "60", "0.1408" ], [ "12649.1000", "426", "61", "0.1432" ], [ "12668.0000", "427", "61", "0.1429" ], [ "12697.0000", "428", "61", "0.1425" ], [ "12728.0000", "429", "61", "0.1422" ], [ "12755.0000", "430", "61", "0.1419" ], [ "12784.0000", "431", "61", "0.1415" ], [ "12810.0000", "432", "61", "0.1412" ], [ "12838.0000", "433", "61", "0.1409" ], [ "12864.0000", "434", "61", "0.1406" ], [ "12896.0000", "435", "61", "0.1402" ], [ "12923.0000", "436", "61", "0.1399" ], [ "12950.0000", "437", "61", "0.1396" ], [ "12978.0000", "438", "61", "0.1393" ], [ "13012.0000", "439", "61", "0.1390" ], [ "13034.1000", "439", "62", "0.1412" ], [ "13040.0000", "440", "62", "0.1409" ], [ "13068.0000", "441", "62", "0.1406" ], [ "13094.0000", "442", "62", "0.1403" ], [ "13126.0000", "443", "62", "0.1400" ], [ "13154.0000", "444", "62", "0.1396" ], [ "13184.0000", "445", "62", "0.1393" ], [ "13209.0000", "446", "62", "0.1390" ], [ "13235.0000", "447", "62", "0.1387" ], [ "13267.0000", "448", "62", "0.1384" ], [ "13299.0000", "449", "62", "0.1381" ], [ "13306.5000", "449", "63", "0.1403" ], [ "13317.2000", "449", "64", "0.1425" ], [ "13325.0000", "450", "64", "0.1422" ], [ "13356.0000", "451", "64", "0.1419" ], [ "13372.7000", "451", "65", "0.1441" ], [ "13385.0000", "452", "65", "0.1438" ], [ "13411.0000", "453", "65", "0.1435" ], [ "13440.0000", "454", "65", "0.1432" ], [ "13473.0000", "455", "65", "0.1429" ], [ "13498.0000", "456", "65", "0.1425" ], [ "13523.0000", "457", "65", "0.1422" ], [ "13557.0000", "458", "65", "0.1419" ], [ "13582.0000", "459", "65", "0.1416" ], [ "13613.0000", "460", "65", "0.1413" ], [ "13644.6000", "460", "66", "0.1435" ], [ "13647.0000", "461", "66", "0.1432" ], [ "13672.0000", "462", "66", "0.1429" ], [ "13672.7000", "462", "67", "0.1450" ], [ "13705.0000", "463", "67", "0.1447" ], [ "13711.1000", "463", "68", "0.1469" ], [ "13732.0000", "464", "68", "0.1466" ], [ "13763.0000", "465", "68", "0.1462" ], [ "13790.0000", "466", "68", "0.1459" ], [ "13822.0000", "467", "68", "0.1456" ], [ "13851.0000", "468", "68", "0.1453" ], [ "13877.0000", "469", "68", "0.1450" ], [ "13911.0000", "470", "68", "0.1447" ], [ "13936.0000", "471", "68", "0.1444" ], [ "13961.0000", "472", "68", "0.1441" ], [ "13993.0000", "473", "68", "0.1438" ], [ "14018.0000", "474", "68", "0.1435" ], [ "14044.0000", "475", "68", "0.1432" ], [ "14074.0000", "476", "68", "0.1429" ], [ "14104.0000", "477", "68", "0.1426" ], [ "14129.0000", "478", "68", "0.1423" ], [ "14129.5000", "478", "69", "0.1444" ], [ "14162.0000", "479", "69", "0.1441" ], [ "14189.0000", "480", "69", "0.1438" ], [ "14218.0000", "481", "69", "0.1435" ], [ "14244.0000", "481", "70", "0.1455" ], [ "14247.0000", "482", "70", "0.1452" ], [ "14268.7000", "482", "71", "0.1473" ], [ "14272.0000", "483", "71", "0.1470" ], [ "14297.0000", "484", "71", "0.1467" ], [ "14328.0000", "485", "71", "0.1464" ], [ "14357.0000", "486", "71", "0.1461" ], [ "14387.0000", "487", "71", "0.1458" ], [ "14421.0000", "488", "71", "0.1455" ], [ "14436.3000", "488", "72", "0.1475" ], [ "14446.0000", "489", "72", "0.1472" ], [ "14477.0000", "490", "72", "0.1469" ], [ "14504.0000", "491", "72", "0.1466" ], [ "14536.0000", "492", "72", "0.1463" ], [ "14561.0000", "493", "72", "0.1460" ], [ "14580.3000", "493", "73", "0.1481" ], [ "14586.0000", "494", "73", "0.1478" ], [ "14599.9000", "494", "74", "0.1498" ], [ "14616.0000", "495", "74", "0.1495" ], [ "14649.0000", "496", "74", "0.1492" ], [ "14683.0000", "497", "74", "0.1489" ], [ "14710.0000", "498", "74", "0.1486" ], [ "14741.0000", "499", "74", "0.1483" ], [ "14748.8000", "499", "75", "0.1503" ], [ "14769.0000", "500", "75", "0.1500" ], [ "14769.9000", "500", "76", "0.1520" ], [ "14798.0000", "501", "76", "0.1517" ], [ "14824.0000", "502", "76", "0.1514" ], [ "14858.0000", "503", "76", "0.1511" ], [ "14887.0000", "504", "76", "0.1508" ], [ "14909.5000", "504", "77", "0.1528" ], [ "14913.7000", "504", "78", "0.1548" ], [ "14915.0000", "505", "78", "0.1545" ], [ "14943.0000", "506", "78", "0.1542" ], [ "14948.2000", "506", "79", "0.1561" ], [ "14965.9000", "506", "80", "0.1581" ], [ "14976.0000", "507", "80", "0.1578" ], [ "15001.0000", "508", "80", "0.1575" ], [ "15034.0000", "509", "80", "0.1572" ], [ "15066.0000", "510", "80", "0.1569" ], [ "15096.0000", "511", "80", "0.1566" ], [ "15125.0000", "512", "80", "0.1563" ], [ "15150.0000", "513", "80", "0.1559" ], [ "15175.0000", "514", "80", "0.1556" ], [ "15207.0000", "515", "80", "0.1553" ], [ "15217.6000", "515", "81", "0.1573" ], [ "15241.0000", "516", "81", "0.1570" ], [ "15274.0000", "517", "81", "0.1567" ], [ "15305.9000", "517", "82", "0.1586" ], [ "15306.0000", "518", "82", "0.1583" ], [ "15331.0000", "519", "82", "0.1580" ], [ "15361.0000", "520", "82", "0.1577" ], [ "15393.0000", "521", "82", "0.1574" ], [ "15424.0000", "522", "82", "0.1571" ], [ "15433.6000", "522", "83", "0.1590" ], [ "15455.0000", "523", "83", "0.1587" ], [ "15486.0000", "524", "83", "0.1584" ], [ "15511.0000", "525", "83", "0.1581" ], [ "15525.4000", "525", "84", "0.1600" ], [ "15537.0000", "526", "84", "0.1597" ], [ "15567.0000", "527", "84", "0.1594" ], [ "15598.0000", "528", "84", "0.1591" ], [ "15623.0000", "529", "84", "0.1588" ], [ "15656.0000", "530", "84", "0.1585" ], [ "15686.0000", "531", "84", "0.1582" ], [ "15719.0000", "532", "84", "0.1579" ], [ "15749.0000", "533", "84", "0.1576" ], [ "15753.9000", "533", "85", "0.1595" ], [ "15778.0000", "534", "85", "0.1592" ], [ "15805.0000", "535", "85", "0.1589" ], [ "15836.0000", "536", "85", "0.1586" ], [ "15865.0000", "537", "85", "0.1583" ], [ "15893.0000", "538", "85", "0.1580" ], [ "15919.0000", "539", "85", "0.1577" ], [ "15949.0000", "540", "85", "0.1574" ], [ "15979.9000", "540", "86", "0.1593" ], [ "15983.0000", "541", "86", "0.1590" ], [ "16015.0000", "542", "86", "0.1587" ], [ "16045.0000", "543", "86", "0.1584" ], [ "16079.0000", "544", "86", "0.1581" ], [ "16111.0000", "545", "86", "0.1578" ], [ "16144.0000", "546", "86", "0.1575" ], [ "16176.0000", "547", "86", "0.1572" ], [ "16192.7000", "547", "87", "0.1590" ], [ "16206.0000", "548", "87", "0.1588" ], [ "16236.0000", "549", "87", "0.1585" ], [ "16266.0000", "550", "87", "0.1582" ], [ "16291.0000", "551", "87", "0.1579" ], [ "16320.0000", "552", "87", "0.1576" ], [ "16333.6000", "552", "88", "0.1594" ], [ "16354.0000", "553", "88", "0.1591" ], [ "16383.0000", "554", "88", "0.1588" ], [ "16415.0000", "555", "88", "0.1586" ], [ "16443.0000", "556", "88", "0.1583" ], [ "16470.0000", "557", "88", "0.1580" ], [ "16504.0000", "558", "88", "0.1577" ], [ "16521.1000", "558", "89", "0.1595" ], [ "16531.0000", "559", "89", "0.1592" ], [ "16564.0000", "560", "89", "0.1589" ], [ "16591.0000", "561", "89", "0.1586" ], [ "16624.0000", "562", "89", "0.1584" ], [ "16656.0000", "563", "89", "0.1581" ], [ "16682.0000", "564", "89", "0.1578" ], [ "16710.0000", "565", "89", "0.1575" ], [ "16724.4000", "565", "90", "0.1593" ], [ "16738.0000", "566", "90", "0.1590" ], [ "16771.0000", "567", "90", "0.1587" ], [ "16804.0000", "568", "90", "0.1585" ], [ "16830.0000", "569", "90", "0.1582" ], [ "16859.0000", "570", "90", "0.1579" ], [ "16886.0000", "571", "90", "0.1576" ], [ "16916.0000", "572", "90", "0.1573" ], [ "16942.2000", "572", "91", "0.1591" ], [ "16948.0000", "573", "91", "0.1588" ], [ "16978.0000", "574", "91", "0.1585" ], [ "17006.0000", "575", "91", "0.1583" ], [ "17037.0000", "576", "91", "0.1580" ], [ "17071.0000", "577", "91", "0.1577" ], [ "17098.6000", "577", "92", "0.1594" ], [ "17101.0000", "578", "92", "0.1592" ], [ "17129.0000", "579", "92", "0.1589" ], [ "17163.0000", "580", "92", "0.1586" ], [ "17192.0000", "581", "92", "0.1583" ], [ "17221.0000", "582", "92", "0.1581" ], [ "17255.0000", "583", "92", "0.1578" ], [ "17289.0000", "584", "92", "0.1575" ], [ "17319.0000", "585", "92", "0.1573" ], [ "17347.0000", "586", "92", "0.1570" ], [ "17375.0000", "587", "92", "0.1567" ], [ "17404.0000", "588", "92", "0.1565" ], [ "17434.0000", "589", "92", "0.1562" ], [ "17468.0000", "590", "92", "0.1559" ], [ "17494.0000", "591", "92", "0.1557" ], [ "17528.0000", "592", "92", "0.1554" ], [ "17553.0000", "593", "92", "0.1551" ], [ "17578.0000", "594", "92", "0.1549" ], [ "17599.7000", "594", "93", "0.1566" ], [ "17604.0000", "595", "93", "0.1563" ], [ "17629.0000", "596", "93", "0.1560" ], [ "17659.0000", "597", "93", "0.1558" ], [ "17665.9000", "597", "94", "0.1575" ], [ "17693.0000", "598", "94", "0.1572" ], [ "17719.0000", "599", "94", "0.1569" ], [ "17748.0000", "600", "94", "0.1567" ], [ "17777.0000", "601", "94", "0.1564" ], [ "17805.0000", "602", "94", "0.1561" ], [ "17839.0000", "603", "94", "0.1559" ], [ "17865.0000", "604", "94", "0.1556" ], [ "17893.0000", "605", "94", "0.1554" ], [ "17925.0000", "606", "94", "0.1551" ], [ "17957.0000", "607", "94", "0.1549" ], [ "17979.9000", "607", "95", "0.1565" ], [ "17986.0000", "608", "95", "0.1563" ], [ "18019.0000", "609", "95", "0.1560" ], [ "18053.0000", "610", "95", "0.1557" ], [ "18080.0000", "611", "95", "0.1555" ], [ "18111.0000", "612", "95", "0.1552" ], [ "18136.0000", "613", "95", "0.1550" ], [ "18168.0000", "614", "95", "0.1547" ], [ "18196.0000", "615", "95", "0.1545" ], [ "18222.0000", "616", "95", "0.1542" ], [ "18244.3000", "616", "96", "0.1558" ], [ "18252.0000", "617", "96", "0.1556" ], [ "18283.0000", "618", "96", "0.1553" ], [ "18313.0000", "619", "96", "0.1551" ], [ "18320.0000", "619", "97", "0.1567" ], [ "18347.0000", "620", "97", "0.1565" ], [ "18377.0000", "621", "97", "0.1562" ], [ "18404.0000", "622", "97", "0.1559" ], [ "18437.0000", "623", "97", "0.1557" ], [ "18468.0000", "624", "97", "0.1554" ], [ "18494.0000", "624", "98", "0.1571" ], [ "18495.0000", "625", "98", "0.1568" ], [ "18523.0000", "626", "98", "0.1565" ], [ "18551.0000", "627", "98", "0.1563" ], [ "18577.0000", "628", "98", "0.1561" ], [ "18606.0000", "629", "98", "0.1558" ], [ "18635.0000", "630", "98", "0.1556" ], [ "18667.0000", "631", "98", "0.1553" ], [ "18699.0000", "632", "98", "0.1551" ], [ "18732.0000", "633", "98", "0.1548" ], [ "18761.0000", "634", "98", "0.1546" ], [ "18787.0000", "635", "98", "0.1543" ], [ "18815.0000", "636", "98", "0.1541" ], [ "18846.0000", "637", "98", "0.1538" ], [ "18876.0000", "638", "98", "0.1536" ], [ "18904.0000", "639", "98", "0.1534" ], [ "18933.0000", "640", "98", "0.1531" ], [ "18939.2000", "640", "99", "0.1547" ], [ "18959.4000", "640", "100", "0.1563" ], [ "18964.0000", "641", "100", "0.1560" ], [ "18989.0000", "642", "100", "0.1558" ], [ "19023.0000", "643", "100", "0.1555" ], [ "19047.0000", "643", "101", "0.1571" ], [ "19053.0000", "644", "101", "0.1568" ], [ "19080.0000", "645", "101", "0.1566" ], [ "19109.0000", "646", "101", "0.1563" ], [ "19141.0000", "647", "101", "0.1561" ], [ "19175.0000", "648", "101", "0.1559" ], [ "19209.0000", "649", "101", "0.1556" ], [ "19239.0000", "650", "101", "0.1554" ], [ "19266.0000", "651", "101", "0.1551" ], [ "19296.0000", "652", "101", "0.1549" ], [ "19327.0000", "653", "101", "0.1547" ], [ "19361.0000", "654", "101", "0.1544" ], [ "19392.0000", "655", "101", "0.1542" ], [ "19419.0000", "656", "101", "0.1540" ], [ "19447.0000", "657", "101", "0.1537" ], [ "19474.0000", "658", "101", "0.1535" ], [ "19502.0000", "659", "101", "0.1533" ], [ "19529.0000", "660", "101", "0.1530" ], [ "19549.3000", "660", "102", "0.1545" ], [ "19554.0000", "661", "102", "0.1543" ], [ "19587.0000", "662", "102", "0.1541" ], [ "19615.1000", "662", "103", "0.1556" ], [ "19617.0000", "663", "103", "0.1554" ], [ "19646.0000", "664", "103", "0.1551" ], [ "19677.0000", "665", "103", "0.1549" ], [ "19708.0000", "666", "103", "0.1547" ], [ "19740.0000", "667", "103", "0.1544" ], [ "19773.0000", "668", "103", "0.1542" ], [ "19805.0000", "669", "103", "0.1540" ], [ "19833.0000", "670", "103", "0.1537" ], [ "19866.0000", "671", "103", "0.1535" ], [ "19900.0000", "672", "103", "0.1533" ], [ "19923.2000", "672", "104", "0.1548" ], [ "19925.0000", "673", "104", "0.1545" ], [ "19959.0000", "674", "104", "0.1543" ], [ "19987.0000", "675", "104", "0.1541" ], [ "20021.0000", "676", "104", "0.1538" ], [ "20035.2000", "676", "105", "0.1553" ], [ "20055.0000", "677", "105", "0.1551" ], [ "20076.5000", "677", "106", "0.1566" ], [ "20082.0000", "678", "106", "0.1563" ], [ "20115.0000", "679", "106", "0.1561" ], [ "20117.9000", "679", "107", "0.1576" ], [ "20143.0000", "680", "107", "0.1574" ], [ "20168.0000", "681", "107", "0.1571" ], [ "20200.0000", "682", "107", "0.1569" ], [ "20227.0000", "683", "107", "0.1567" ], [ "20261.0000", "684", "107", "0.1564" ], [ "20293.0000", "685", "107", "0.1562" ], [ "20319.0000", "686", "107", "0.1560" ], [ "20350.0000", "687", "107", "0.1557" ], [ "20381.0000", "688", "107", "0.1555" ], [ "20406.0000", "689", "107", "0.1553" ], [ "20436.0000", "690", "107", "0.1551" ], [ "20465.0000", "691", "107", "0.1548" ], [ "20490.0000", "692", "107", "0.1546" ], [ "20521.0000", "693", "107", "0.1544" ], [ "20552.0000", "694", "107", "0.1542" ], [ "20582.0000", "695", "107", "0.1540" ], [ "20588.5000", "695", "108", "0.1554" ], [ "20607.0000", "696", "108", "0.1552" ], [ "20641.0000", "697", "108", "0.1549" ], [ "20671.0000", "698", "108", "0.1547" ], [ "20698.0000", "699", "108", "0.1545" ], [ "20729.0000", "700", "108", "0.1543" ], [ "20755.0000", "701", "108", "0.1541" ], [ "20759.0000", "701", "109", "0.1555" ], [ "20767.7000", "701", "110", "0.1569" ], [ "20770.0000", "701", "111", "0.1583" ], [ "20786.0000", "702", "111", "0.1581" ], [ "20795.0000", "702", "112", "0.1595" ], [ "20805.0000", "702", "113", "0.1610" ], [ "20819.0000", "703", "113", "0.1607" ], [ "20851.0000", "704", "113", "0.1605" ], [ "20882.0000", "705", "113", "0.1603" ], [ "20912.0000", "706", "113", "0.1601" ], [ "20943.0000", "707", "113", "0.1598" ], [ "20975.0000", "708", "113", "0.1596" ], [ "21000.0000", "709", "113", "0.1594" ], [ "21034.0000", "710", "113", "0.1592" ], [ "21062.0000", "711", "113", "0.1589" ], [ "21089.0000", "712", "113", "0.1587" ], [ "21120.0000", "713", "113", "0.1585" ], [ "21154.0000", "714", "113", "0.1583" ], [ "21185.0000", "715", "113", "0.1580" ], [ "21210.0000", "716", "113", "0.1578" ], [ "21235.0000", "717", "113", "0.1576" ], [ "21261.0000", "718", "113", "0.1574" ], [ "21295.0000", "719", "113", "0.1572" ], [ "21325.0000", "720", "113", "0.1569" ], [ "21335.6000", "720", "114", "0.1583" ], [ "21354.0000", "721", "114", "0.1581" ], [ "21382.0000", "722", "114", "0.1579" ], [ "21413.0000", "723", "114", "0.1577" ], [ "21443.0000", "724", "114", "0.1575" ], [ "21475.0000", "725", "114", "0.1572" ], [ "21483.3000", "725", "115", "0.1586" ], [ "21504.0000", "726", "115", "0.1584" ], [ "21524.9000", "726", "116", "0.1598" ], [ "21532.0000", "727", "116", "0.1596" ], [ "21561.0000", "728", "116", "0.1593" ], [ "21591.0000", "729", "116", "0.1591" ], [ "21621.0000", "730", "116", "0.1589" ], [ "21653.0000", "731", "116", "0.1587" ], [ "21682.0000", "732", "116", "0.1585" ], [ "21702.6000", "732", "117", "0.1598" ], [ "21708.0000", "733", "117", "0.1596" ], [ "21739.0000", "734", "117", "0.1594" ], [ "21764.0000", "735", "117", "0.1592" ], [ "21793.0000", "736", "117", "0.1590" ], [ "21825.0000", "737", "117", "0.1588" ], [ "21857.0000", "738", "117", "0.1585" ], [ "21884.0000", "739", "117", "0.1583" ], [ "21915.0000", "740", "117", "0.1581" ], [ "21920.6000", "740", "118", "0.1595" ], [ "21942.0000", "741", "118", "0.1592" ], [ "21971.0000", "742", "118", "0.1590" ], [ "21999.0000", "743", "118", "0.1588" ], [ "22030.0000", "744", "118", "0.1586" ], [ "22064.0000", "745", "118", "0.1584" ], [ "22089.0000", "746", "118", "0.1582" ], [ "22118.0000", "747", "118", "0.1580" ], [ "22144.0000", "748", "118", "0.1578" ], [ "22176.0000", "749", "118", "0.1575" ], [ "22194.3000", "749", "119", "0.1589" ], [ "22207.0000", "750", "119", "0.1587" ], [ "22240.0000", "751", "119", "0.1585" ], [ "22273.0000", "752", "119", "0.1582" ], [ "22298.0000", "753", "119", "0.1580" ], [ "22308.3000", "753", "120", "0.1594" ], [ "22327.0000", "754", "120", "0.1592" ], [ "22360.0000", "755", "120", "0.1589" ], [ "22385.0000", "756", "120", "0.1587" ], [ "22418.0000", "757", "120", "0.1585" ], [ "22425.7000", "757", "121", "0.1598" ], [ "22451.0000", "758", "121", "0.1596" ], [ "22482.0000", "759", "121", "0.1594" ], [ "22514.0000", "760", "121", "0.1592" ], [ "22548.0000", "761", "121", "0.1590" ], [ "22580.0000", "762", "121", "0.1588" ], [ "22610.0000", "763", "121", "0.1586" ], [ "22644.0000", "764", "121", "0.1584" ], [ "22656.4000", "764", "122", "0.1597" ], [ "22670.0000", "765", "122", "0.1595" ], [ "22703.0000", "766", "122", "0.1593" ], [ "22736.0000", "767", "122", "0.1591" ], [ "22762.0000", "768", "122", "0.1589" ], [ "22788.0000", "769", "122", "0.1586" ], [ "22820.0000", "770", "122", "0.1584" ], [ "22847.0000", "771", "122", "0.1582" ], [ "22878.0000", "772", "122", "0.1580" ], [ "22906.0000", "773", "122", "0.1578" ], [ "22933.0000", "774", "122", "0.1576" ], [ "22938.2000", "774", "123", "0.1589" ], [ "22967.0000", "775", "123", "0.1587" ], [ "22992.0000", "776", "123", "0.1585" ], [ "23025.0000", "777", "123", "0.1583" ], [ "23054.0000", "778", "123", "0.1581" ], [ "23082.0000", "779", "123", "0.1579" ], [ "23114.0000", "780", "123", "0.1577" ], [ "23146.0000", "781", "123", "0.1575" ], [ "23156.0000", "781", "124", "0.1588" ], [ "23176.0000", "782", "124", "0.1586" ], [ "23207.0000", "783", "124", "0.1584" ], [ "23239.0000", "784", "124", "0.1582" ], [ "23239.1000", "784", "125", "0.1594" ], [ "23267.0000", "785", "125", "0.1592" ], [ "23301.0000", "786", "125", "0.1590" ], [ "23333.0000", "787", "125", "0.1588" ], [ "23359.0000", "788", "125", "0.1586" ], [ "23391.0000", "789", "125", "0.1584" ], [ "23423.0000", "790", "125", "0.1582" ], [ "23444.9000", "790", "126", "0.1595" ], [ "23452.0000", "791", "126", "0.1593" ], [ "23477.0000", "792", "126", "0.1591" ], [ "23511.0000", "793", "126", "0.1589" ], [ "23542.0000", "794", "126", "0.1587" ], [ "23576.0000", "795", "126", "0.1585" ], [ "23599.4000", "795", "127", "0.1597" ], [ "23609.0000", "796", "127", "0.1595" ], [ "23639.0000", "797", "127", "0.1593" ], [ "23668.0000", "798", "127", "0.1591" ], [ "23699.0000", "799", "127", "0.1589" ], [ "23728.0000", "800", "127", "0.1588" ], [ "23759.0000", "801", "127", "0.1586" ], [ "23793.0000", "802", "127", "0.1584" ], [ "23818.0000", "803", "127", "0.1582" ], [ "23844.0000", "804", "127", "0.1580" ], [ "23870.0000", "805", "127", "0.1578" ], [ "23888.9000", "805", "128", "0.1590" ], [ "23903.0000", "806", "128", "0.1588" ], [ "23932.0000", "807", "128", "0.1586" ], [ "23965.0000", "808", "128", "0.1584" ], [ "23997.0000", "809", "128", "0.1582" ], [ "24030.0000", "810", "128", "0.1580" ], [ "24060.0000", "811", "128", "0.1578" ], [ "24089.0000", "812", "128", "0.1576" ], [ "24118.0000", "813", "128", "0.1574" ], [ "24146.0000", "814", "128", "0.1572" ], [ "24180.0000", "815", "128", "0.1571" ], [ "24205.0000", "816", "128", "0.1569" ], [ "24238.0000", "817", "128", "0.1567" ], [ "24271.0000", "818", "128", "0.1565" ], [ "24300.0000", "819", "128", "0.1563" ], [ "24330.0000", "820", "128", "0.1561" ], [ "24364.0000", "821", "128", "0.1559" ], [ "24397.0000", "822", "128", "0.1557" ], [ "24397.6000", "822", "129", "0.1569" ], [ "24426.0000", "823", "129", "0.1567" ], [ "24451.0000", "824", "129", "0.1566" ], [ "24480.0000", "825", "129", "0.1564" ], [ "24514.0000", "826", "129", "0.1562" ], [ "24545.0000", "827", "129", "0.1560" ], [ "24579.0000", "828", "129", "0.1558" ], [ "24610.0000", "829", "129", "0.1556" ], [ "24644.0000", "830", "129", "0.1554" ], [ "24672.8000", "830", "130", "0.1566" ], [ "24678.0000", "831", "130", "0.1564" ], [ "24692.0000", "831", "131", "0.1576" ], [ "24712.0000", "832", "131", "0.1575" ], [ "24746.0000", "833", "131", "0.1573" ], [ "24777.0000", "834", "131", "0.1571" ], [ "24808.0000", "835", "131", "0.1569" ], [ "24837.0000", "836", "131", "0.1567" ], [ "24856.5000", "836", "132", "0.1579" ], [ "24867.0000", "837", "132", "0.1577" ], [ "24894.0000", "838", "132", "0.1575" ], [ "24902.6000", "838", "133", "0.1587" ], [ "24920.0000", "839", "133", "0.1585" ], [ "24934.0000", "839", "134", "0.1597" ], [ "24954.0000", "840", "134", "0.1595" ], [ "24979.0000", "841", "134", "0.1593" ], [ "25010.0000", "842", "134", "0.1591" ], [ "25015.0000", "842", "135", "0.1603" ], [ "25038.0000", "843", "135", "0.1601" ], [ "25063.0000", "844", "135", "0.1600" ], [ "25096.0000", "845", "135", "0.1598" ], [ "25126.0000", "846", "135", "0.1596" ], [ "25152.0000", "847", "135", "0.1594" ], [ "25185.0000", "848", "135", "0.1592" ], [ "25210.0000", "849", "135", "0.1590" ], [ "25242.0000", "850", "135", "0.1588" ], [ "25269.0000", "851", "135", "0.1586" ], [ "25303.0000", "852", "135", "0.1585" ], [ "25328.0000", "853", "135", "0.1583" ], [ "25355.0000", "854", "135", "0.1581" ], [ "25382.0000", "855", "135", "0.1579" ], [ "25409.0000", "856", "135", "0.1577" ], [ "25439.0000", "857", "135", "0.1575" ], [ "25471.0000", "858", "135", "0.1573" ], [ "25497.0000", "859", "135", "0.1572" ], [ "25523.0000", "860", "135", "0.1570" ], [ "25550.0000", "861", "135", "0.1568" ], [ "25578.0000", "862", "135", "0.1566" ], [ "25599.3000", "862", "136", "0.1578" ], [ "25606.0000", "863", "136", "0.1576" ], [ "25626.6000", "863", "137", "0.1587" ], [ "25640.0000", "864", "137", "0.1586" ], [ "25671.0000", "865", "137", "0.1584" ], [ "25703.0000", "866", "137", "0.1582" ], [ "25731.0000", "867", "137", "0.1580" ], [ "25763.1000", "867", "138", "0.1592" ], [ "25764.0000", "868", "138", "0.1590" ], [ "25793.0000", "869", "138", "0.1588" ], [ "25822.0000", "870", "138", "0.1586" ], [ "25846.2000", "870", "139", "0.1598" ], [ "25850.0000", "871", "139", "0.1596" ], [ "25873.6000", "871", "140", "0.1607" ], [ "25876.0000", "872", "140", "0.1606" ], [ "25901.0000", "873", "140", "0.1604" ], [ "25929.0000", "874", "140", "0.1602" ], [ "25957.0000", "875", "140", "0.1600" ], [ "25986.0000", "876", "140", "0.1598" ], [ "26015.0000", "877", "140", "0.1596" ], [ "26048.0000", "878", "140", "0.1595" ], [ "26076.0000", "879", "140", "0.1593" ], [ "26110.0000", "880", "140", "0.1591" ], [ "26137.0000", "881", "140", "0.1589" ], [ "26169.0000", "882", "140", "0.1587" ], [ "26198.0000", "883", "140", "0.1586" ], [ "26227.0000", "884", "140", "0.1584" ], [ "26253.0000", "885", "140", "0.1582" ], [ "26283.0000", "886", "140", "0.1580" ], [ "26309.0000", "887", "140", "0.1578" ], [ "26337.0000", "888", "140", "0.1577" ], [ "26363.0000", "889", "140", "0.1575" ], [ "26397.0000", "890", "140", "0.1573" ], [ "26429.0000", "891", "140", "0.1571" ], [ "26458.0000", "892", "140", "0.1570" ], [ "26490.0000", "893", "140", "0.1568" ], [ "26522.0000", "894", "140", "0.1566" ], [ "26547.0000", "895", "140", "0.1564" ], [ "26573.0000", "896", "140", "0.1563" ], [ "26603.0000", "897", "140", "0.1561" ], [ "26629.0000", "898", "140", "0.1559" ], [ "26660.0000", "899", "140", "0.1557" ], [ "26679.3000", "899", "141", "0.1568" ], [ "26694.0000", "900", "141", "0.1567" ], [ "26720.0000", "901", "141", "0.1565" ], [ "26753.0000", "902", "141", "0.1563" ], [ "26763.0000", "902", "142", "0.1574" ], [ "26779.0000", "903", "142", "0.1573" ], [ "26803.6000", "903", "143", "0.1584" ], [ "26808.0000", "904", "143", "0.1582" ], [ "26837.0000", "905", "143", "0.1580" ], [ "26862.0000", "906", "143", "0.1578" ], [ "26888.0000", "907", "143", "0.1577" ], [ "26914.0000", "908", "143", "0.1575" ], [ "26941.6000", "908", "144", "0.1586" ], [ "26944.0000", "909", "144", "0.1584" ], [ "26957.9000", "909", "145", "0.1595" ], [ "26978.0000", "910", "145", "0.1593" ], [ "27006.0000", "911", "145", "0.1592" ], [ "27036.0000", "912", "145", "0.1590" ], [ "27066.0000", "913", "145", "0.1588" ], [ "27098.0000", "914", "145", "0.1586" ], [ "27131.0000", "915", "145", "0.1585" ], [ "27157.0000", "916", "145", "0.1583" ], [ "27191.0000", "917", "145", "0.1581" ], [ "27221.0000", "918", "145", "0.1580" ], [ "27248.0000", "919", "145", "0.1578" ], [ "27276.0000", "920", "145", "0.1576" ], [ "27308.0000", "921", "145", "0.1574" ], [ "27336.0000", "922", "145", "0.1573" ], [ "27364.0000", "923", "145", "0.1571" ], [ "27391.0000", "924", "145", "0.1569" ], [ "27418.0000", "925", "145", "0.1568" ], [ "27450.0000", "926", "145", "0.1566" ], [ "27480.0000", "927", "145", "0.1564" ], [ "27513.0000", "928", "145", "0.1563" ], [ "27540.0000", "929", "145", "0.1561" ], [ "27565.0000", "930", "145", "0.1559" ], [ "27595.0000", "931", "145", "0.1557" ], [ "27628.0000", "932", "145", "0.1556" ], [ "27661.0000", "933", "145", "0.1554" ], [ "27690.0000", "934", "145", "0.1552" ], [ "27719.0000", "935", "145", "0.1551" ], [ "27750.0000", "936", "145", "0.1549" ], [ "27779.0000", "937", "145", "0.1547" ], [ "27792.6000", "937", "146", "0.1558" ], [ "27810.0000", "938", "146", "0.1557" ], [ "27838.0000", "939", "146", "0.1555" ], [ "27858.2000", "939", "147", "0.1565" ], [ "27868.0000", "940", "147", "0.1564" ], [ "27876.9000", "940", "148", "0.1574" ], [ "27895.0000", "941", "148", "0.1573" ], [ "27920.0000", "942", "148", "0.1571" ], [ "27954.0000", "943", "148", "0.1569" ], [ "27987.0000", "944", "148", "0.1568" ], [ "27990.7000", "944", "149", "0.1578" ], [ "27991.0000", "944", "150", "0.1589" ], [ "28012.0000", "945", "150", "0.1587" ], [ "28044.0000", "946", "150", "0.1586" ], [ "28076.0000", "947", "150", "0.1584" ], [ "28103.0000", "948", "150", "0.1582" ], [ "28119.6000", "948", "151", "0.1593" ], [ "28128.0000", "949", "151", "0.1591" ], [ "28154.0000", "950", "151", "0.1589" ], [ "28186.0000", "951", "151", "0.1588" ], [ "28213.0000", "952", "151", "0.1586" ], [ "28243.0000", "953", "151", "0.1584" ], [ "28269.0000", "954", "151", "0.1583" ], [ "28295.0000", "955", "151", "0.1581" ], [ "28301.2000", "955", "152", "0.1592" ], [ "28322.0000", "956", "152", "0.1590" ], [ "28339.8000", "956", "153", "0.1600" ], [ "28352.0000", "957", "153", "0.1599" ], [ "28381.0000", "958", "153", "0.1597" ], [ "28415.0000", "959", "153", "0.1595" ], [ "28446.0000", "960", "153", "0.1594" ], [ "28472.0000", "961", "153", "0.1592" ], [ "28503.0000", "962", "153", "0.1590" ], [ "28534.0000", "963", "153", "0.1589" ], [ "28568.0000", "964", "153", "0.1587" ], [ "28590.0000", "964", "154", "0.1598" ], [ "28601.0000", "965", "154", "0.1596" ], [ "28635.0000", "966", "154", "0.1594" ], [ "28662.1000", "966", "155", "0.1605" ], [ "28667.0000", "967", "155", "0.1603" ], [ "28701.0000", "968", "155", "0.1601" ], [ "28716.5000", "968", "156", "0.1612" ], [ "28730.0000", "969", "156", "0.1610" ], [ "28757.0000", "970", "156", "0.1608" ], [ "28785.0000", "971", "156", "0.1607" ], [ "28819.0000", "972", "156", "0.1605" ], [ "28851.0000", "973", "156", "0.1603" ], [ "28856.1000", "973", "157", "0.1614" ], [ "28884.0000", "974", "157", "0.1612" ], [ "28915.0000", "975", "157", "0.1610" ], [ "28930.0000", "975", "158", "0.1621" ], [ "28949.0000", "976", "158", "0.1619" ], [ "28978.0000", "977", "158", "0.1617" ], [ "29008.0000", "978", "158", "0.1616" ], [ "29041.0000", "979", "158", "0.1614" ], [ "29074.0000", "980", "158", "0.1612" ], [ "29108.0000", "981", "158", "0.1611" ], [ "29133.0000", "982", "158", "0.1609" ], [ "29167.0000", "983", "158", "0.1607" ], [ "29192.0000", "984", "158", "0.1606" ], [ "29220.0000", "985", "158", "0.1604" ], [ "29248.0000", "986", "158", "0.1602" ], [ "29273.0000", "987", "158", "0.1601" ], [ "29300.0000", "988", "158", "0.1599" ], [ "29326.0000", "989", "158", "0.1598" ], [ "29352.0000", "990", "158", "0.1596" ], [ "29386.0000", "991", "158", "0.1594" ], [ "29414.0000", "992", "158", "0.1593" ], [ "29437.9000", "992", "159", "0.1603" ], [ "29448.0000", "993", "159", "0.1601" ], [ "29479.0000", "994", "159", "0.1600" ], [ "29512.0000", "995", "159", "0.1598" ], [ "29513.9000", "995", "160", "0.1608" ], [ "29543.0000", "996", "160", "0.1606" ], [ "29551.9000", "996", "161", "0.1616" ], [ "29568.0000", "997", "161", "0.1615" ], [ "29599.0000", "998", "161", "0.1613" ], [ "29628.0000", "999", "161", "0.1612" ], [ "29654.5000", "999", "162", "0.1622" ], [ "29657.0000", "1000", "162", "0.1620" ], [ "29684.0000", "1001", "162", "0.1618" ], [ "29709.0000", "1002", "162", "0.1617" ], [ "29743.0000", "1003", "162", "0.1615" ], [ "29776.0000", "1004", "162", "0.1614" ], [ "29801.0000", "1005", "162", "0.1612" ], [ "29813.4000", "1005", "163", "0.1622" ], [ "29835.0000", "1006", "163", "0.1620" ], [ "29863.0000", "1007", "163", "0.1619" ], [ "29894.0000", "1008", "163", "0.1617" ], [ "29919.0000", "1009", "163", "0.1615" ], [ "29945.0000", "1010", "163", "0.1614" ], [ "29973.0000", "1011", "163", "0.1612" ], [ "30006.0000", "1012", "163", "0.1611" ], [ "30036.0000", "1013", "163", "0.1609" ], [ "30063.0000", "1014", "163", "0.1607" ], [ "30089.0000", "1015", "163", "0.1606" ], [ "30117.0000", "1016", "163", "0.1604" ], [ "30151.0000", "1017", "163", "0.1603" ], [ "30181.0000", "1018", "163", "0.1601" ], [ "30211.0000", "1019", "163", "0.1600" ], [ "30237.0000", "1020", "163", "0.1598" ], [ "30248.2000", "1020", "164", "0.1608" ], [ "30268.0000", "1021", "164", "0.1606" ], [ "30298.0000", "1022", "164", "0.1605" ], [ "30327.0000", "1023", "164", "0.1603" ], [ "30356.0000", "1024", "164", "0.1602" ], [ "30390.0000", "1025", "164", "0.1600" ], [ "30418.0000", "1026", "164", "0.1598" ], [ "30443.0000", "1027", "164", "0.1597" ], [ "30473.0000", "1028", "164", "0.1595" ], [ "30503.0000", "1029", "164", "0.1594" ], [ "30531.0000", "1030", "164", "0.1592" ], [ "30564.0000", "1031", "164", "0.1591" ], [ "30594.0000", "1032", "164", "0.1589" ], [ "30596.7000", "1032", "165", "0.1599" ], [ "30626.0000", "1033", "165", "0.1597" ], [ "30652.0000", "1034", "165", "0.1596" ], [ "30674.7000", "1034", "166", "0.1605" ], [ "30681.0000", "1035", "166", "0.1604" ], [ "30714.0000", "1036", "166", "0.1602" ], [ "30740.0000", "1037", "166", "0.1601" ], [ "30766.0000", "1038", "166", "0.1599" ], [ "30775.8000", "1038", "167", "0.1609" ], [ "30796.0000", "1039", "167", "0.1607" ], [ "30827.0000", "1040", "167", "0.1606" ], [ "30859.0000", "1041", "167", "0.1604" ], [ "30892.0000", "1042", "167", "0.1603" ], [ "30926.0000", "1043", "167", "0.1601" ], [ "30934.1000", "1043", "168", "0.1611" ], [ "30954.0000", "1044", "168", "0.1609" ], [ "30971.0000", "1044", "169", "0.1619" ], [ "30981.0000", "1045", "169", "0.1617" ], [ "31007.0000", "1046", "169", "0.1616" ], [ "31038.0000", "1047", "169", "0.1614" ], [ "31065.0000", "1048", "169", "0.1613" ], [ "31078.8000", "1048", "170", "0.1622" ], [ "31091.0000", "1049", "170", "0.1621" ], [ "31122.6000", "1049", "171", "0.1630" ], [ "31123.0000", "1050", "171", "0.1629" ], [ "31154.0000", "1051", "171", "0.1627" ], [ "31183.0000", "1052", "171", "0.1625" ], [ "31208.0000", "1053", "171", "0.1624" ], [ "31226.6000", "1053", "172", "0.1633" ], [ "31237.0000", "1054", "172", "0.1632" ], [ "31269.0000", "1055", "172", "0.1630" ], [ "31302.0000", "1056", "172", "0.1629" ], [ "31332.0000", "1057", "172", "0.1627" ], [ "31364.0000", "1058", "172", "0.1626" ], [ "31398.0000", "1059", "172", "0.1624" ], [ "31425.0000", "1060", "172", "0.1623" ], [ "31451.0000", "1061", "172", "0.1621" ], [ "31483.0000", "1062", "172", "0.1620" ], [ "31514.0000", "1063", "172", "0.1618" ], [ "31543.0000", "1064", "172", "0.1617" ], [ "31575.0000", "1065", "172", "0.1615" ], [ "31603.0000", "1066", "172", "0.1614" ], [ "31634.0000", "1067", "172", "0.1612" ], [ "31639.5000", "1067", "173", "0.1621" ], [ "31660.0000", "1068", "173", "0.1620" ], [ "31667.9000", "1068", "174", "0.1629" ], [ "31694.0000", "1069", "174", "0.1628" ], [ "31728.0000", "1070", "174", "0.1626" ], [ "31760.0000", "1071", "174", "0.1625" ], [ "31785.0000", "1072", "174", "0.1623" ], [ "31819.0000", "1073", "174", "0.1622" ], [ "31845.0000", "1074", "174", "0.1620" ], [ "31871.0000", "1075", "174", "0.1619" ], [ "31899.0000", "1076", "174", "0.1617" ], [ "31927.0000", "1077", "174", "0.1616" ], [ "31957.0000", "1078", "174", "0.1614" ], [ "31986.0000", "1079", "174", "0.1613" ], [ "31992.4000", "1079", "175", "0.1622" ], [ "32020.0000", "1080", "175", "0.1620" ], [ "32054.0000", "1081", "175", "0.1619" ], [ "32085.0000", "1082", "175", "0.1617" ], [ "32112.0000", "1083", "175", "0.1616" ], [ "32140.0000", "1084", "175", "0.1614" ], [ "32174.0000", "1085", "175", "0.1613" ], [ "32201.0000", "1086", "175", "0.1611" ], [ "32230.0000", "1087", "175", "0.1610" ], [ "32234.6000", "1087", "176", "0.1619" ], [ "32260.0000", "1088", "176", "0.1618" ], [ "32287.0000", "1089", "176", "0.1616" ], [ "32317.0000", "1090", "176", "0.1615" ], [ "32346.0000", "1091", "176", "0.1613" ], [ "32376.0000", "1092", "176", "0.1612" ], [ "32408.0000", "1093", "176", "0.1610" ], [ "32436.0000", "1094", "176", "0.1609" ], [ "32462.0000", "1095", "176", "0.1607" ], [ "32489.0000", "1096", "176", "0.1606" ], [ "32520.0000", "1097", "176", "0.1604" ], [ "32552.0000", "1098", "176", "0.1603" ], [ "32578.0000", "1099", "176", "0.1601" ], [ "32605.0000", "1100", "176", "0.1600" ], [ "32631.0000", "1101", "176", "0.1599" ], [ "32658.0000", "1102", "176", "0.1597" ], [ "32687.5000", "1102", "177", "0.1606" ], [ "32692.0000", "1103", "177", "0.1605" ], [ "32693.1000", "1103", "178", "0.1614" ], [ "32720.0000", "1104", "178", "0.1612" ], [ "32754.0000", "1105", "178", "0.1611" ], [ "32788.0000", "1106", "178", "0.1609" ], [ "32820.0000", "1107", "178", "0.1608" ], [ "32827.4000", "1107", "179", "0.1617" ], [ "32832.6000", "1107", "180", "0.1626" ], [ "32839.3000", "1107", "181", "0.1635" ], [ "32847.0000", "1108", "181", "0.1634" ], [ "32881.0000", "1109", "181", "0.1632" ], [ "32910.0000", "1110", "181", "0.1631" ], [ "32943.0000", "1111", "181", "0.1629" ], [ "32976.0000", "1112", "181", "0.1628" ], [ "33001.0000", "1113", "181", "0.1626" ], [ "33020.2000", "1113", "182", "0.1635" ], [ "33029.0000", "1114", "182", "0.1634" ], [ "33062.0000", "1115", "182", "0.1632" ], [ "33093.0000", "1116", "182", "0.1631" ], [ "33119.0000", "1117", "182", "0.1629" ], [ "33152.0000", "1118", "182", "0.1628" ], [ "33179.6000", "1118", "183", "0.1637" ], [ "33185.0000", "1119", "183", "0.1635" ], [ "33214.0000", "1120", "183", "0.1634" ], [ "33244.0000", "1121", "183", "0.1632" ], [ "33271.0000", "1122", "183", "0.1631" ], [ "33299.3000", "1122", "184", "0.1640" ], [ "33304.0000", "1123", "184", "0.1638" ], [ "33334.0000", "1124", "184", "0.1637" ], [ "33363.0000", "1125", "184", "0.1636" ], [ "33392.0000", "1126", "184", "0.1634" ], [ "33426.0000", "1127", "184", "0.1633" ], [ "33452.0000", "1128", "184", "0.1631" ], [ "33481.0000", "1129", "184", "0.1630" ], [ "33515.0000", "1130", "184", "0.1628" ], [ "33546.0000", "1131", "184", "0.1627" ], [ "33547.6000", "1131", "185", "0.1636" ], [ "33574.0000", "1132", "185", "0.1634" ], [ "33607.0000", "1133", "185", "0.1633" ], [ "33635.0000", "1134", "185", "0.1631" ], [ "33669.0000", "1135", "185", "0.1630" ], [ "33696.0000", "1136", "185", "0.1629" ], [ "33728.0000", "1137", "185", "0.1627" ], [ "33758.0000", "1138", "185", "0.1626" ], [ "33783.0000", "1139", "185", "0.1624" ], [ "33789.6000", "1139", "186", "0.1633" ], [ "33803.0000", "1139", "187", "0.1642" ], [ "33817.0000", "1140", "187", "0.1640" ], [ "33847.0000", "1141", "187", "0.1639" ], [ "33875.0000", "1142", "187", "0.1637" ], [ "33903.0000", "1143", "187", "0.1636" ], [ "33934.0000", "1144", "187", "0.1635" ], [ "33967.0000", "1145", "187", "0.1633" ], [ "33993.0000", "1146", "187", "0.1632" ], [ "34021.0000", "1147", "187", "0.1630" ], [ "34048.0000", "1148", "187", "0.1629" ], [ "34076.0000", "1149", "187", "0.1628" ], [ "34094.0000", "1149", "188", "0.1636" ], [ "34101.0000", "1150", "188", "0.1635" ], [ "34131.0000", "1151", "188", "0.1633" ], [ "34159.0000", "1152", "188", "0.1632" ], [ "34185.0000", "1153", "188", "0.1631" ], [ "34211.0000", "1154", "188", "0.1629" ], [ "34212.6000", "1154", "189", "0.1638" ], [ "34236.0000", "1155", "189", "0.1636" ], [ "34268.0000", "1156", "189", "0.1635" ], [ "34301.0000", "1157", "189", "0.1634" ], [ "34332.0000", "1158", "189", "0.1632" ], [ "34362.0000", "1159", "189", "0.1631" ], [ "34377.7000", "1159", "190", "0.1639" ], [ "34393.0000", "1160", "190", "0.1638" ], [ "34418.0000", "1161", "190", "0.1637" ], [ "34443.0000", "1162", "190", "0.1635" ], [ "34472.0000", "1163", "190", "0.1634" ], [ "34504.0000", "1164", "190", "0.1632" ], [ "34536.0000", "1165", "190", "0.1631" ], [ "34564.0000", "1166", "190", "0.1630" ], [ "34597.0000", "1167", "190", "0.1628" ], [ "34624.0000", "1168", "190", "0.1627" ], [ "34654.0000", "1169", "190", "0.1625" ], [ "34680.0000", "1170", "190", "0.1624" ], [ "34714.0000", "1171", "190", "0.1623" ], [ "34740.0000", "1172", "190", "0.1621" ], [ "34773.0000", "1173", "190", "0.1620" ], [ "34798.0000", "1174", "190", "0.1618" ], [ "34823.4000", "1174", "191", "0.1627" ], [ "34829.0000", "1175", "191", "0.1626" ], [ "34860.0000", "1176", "191", "0.1624" ], [ "34892.0000", "1177", "191", "0.1623" ], [ "34918.0000", "1178", "191", "0.1621" ], [ "34943.0000", "1179", "191", "0.1620" ], [ "34971.0000", "1180", "191", "0.1619" ], [ "34997.0000", "1181", "191", "0.1617" ], [ "35031.0000", "1182", "191", "0.1616" ], [ "35061.0000", "1183", "191", "0.1615" ], [ "35083.4000", "1183", "192", "0.1623" ], [ "35093.0000", "1184", "192", "0.1622" ], [ "35118.0000", "1185", "192", "0.1620" ], [ "35152.0000", "1186", "192", "0.1619" ], [ "35182.0000", "1187", "192", "0.1618" ], [ "35213.0000", "1188", "192", "0.1616" ], [ "35240.0000", "1189", "192", "0.1615" ], [ "35266.0000", "1190", "192", "0.1613" ], [ "35292.0000", "1191", "192", "0.1612" ], [ "35321.0000", "1192", "192", "0.1611" ], [ "35348.0000", "1193", "192", "0.1609" ], [ "35377.0000", "1194", "192", "0.1608" ], [ "35405.0000", "1195", "192", "0.1607" ], [ "35431.0000", "1196", "192", "0.1605" ], [ "35459.0000", "1197", "192", "0.1604" ], [ "35485.0000", "1198", "192", "0.1603" ], [ "35510.0000", "1199", "192", "0.1601" ], [ "35541.0000", "1200", "192", "0.1600" ], [ "35572.0000", "1201", "192", "0.1599" ], [ "35606.0000", "1202", "192", "0.1597" ], [ "35632.0000", "1203", "192", "0.1596" ], [ "35660.0000", "1204", "192", "0.1595" ], [ "35685.0000", "1205", "192", "0.1593" ], [ "35714.0000", "1206", "192", "0.1592" ], [ "35745.0000", "1207", "192", "0.1591" ], [ "35779.0000", "1208", "192", "0.1589" ], [ "35804.0000", "1209", "192", "0.1588" ], [ "35833.0000", "1210", "192", "0.1587" ], [ "35861.0000", "1211", "192", "0.1585" ], [ "35891.0000", "1212", "192", "0.1584" ], [ "35920.0000", "1213", "192", "0.1583" ], [ "35950.0000", "1214", "192", "0.1582" ], [ "35982.0000", "1215", "192", "0.1580" ]]
      res.pop()



      let resProb=res.map(function(point, index) {
            if (index==0){
              return "0"
            } else if(point!=""){
              return point[3]*100
            } else{
              return
            }
          })

      let resTime=res.map(function(point, index) {
                if (index==0){
                  return "0"
                } else if(point!=""){
                  if (point<=0){
                    return "0"
                  }
                  return point[0]
                } else{
                  return "0"
                }

              })
      const data = {
          labels: resTime,
          datasets: [
              {
                  name: "Some Data",
                  chartType: "line",
                  values: resProb
              },

          ]
      }

      const chart = new frappe.Chart("#chart", {  // or a DOM element,
                                                  // new Chart() in case of ES6 module with above usage
          title: "Delivery %",
          data: data,
          type: 'line', // or 'bar', 'line', 'scatter', 'pie', 'percentage'
          height: 800,
          truncateLegends: true,
          colors: ['#FFADAD'],
          axisOptions: {
            xAxisMode: "span",
            yAxisMode: "span",
            xIsSeries: true
          },
          tooltipOptions: {
            formatTooltipX: (d) => (parseFloat(d).toFixed(2) + "").toUpperCase() + " seconds",
            formatTooltipY: (d) => parseFloat(d).toFixed(2) + " delivered/created"
          },
          lineOptions: {
            spline: false,
            hideDots: 1,
            heatline: 0
          }
        })




  }



 },
 watch: {
   Nsim: function(val, oldval){
     if (oldval<val){
       dif=val-oldval
     } else {
       dif=oldval-val
     }

     if (oldval<val){
       for (var i=0; i<dif; i++){
         this.OneConfig.push({
           sTime: 43200,
           tRange: 10,
           tSpeed: "250k",

           Grout: "EpidemicRouter",
           nGroups: "1",
           G1_ID: "c",
           G1_nH: "60",
           G1_rF: "data/tram3.wkt",
           G1_rT: "1",
           G2_ID: "p",
           G2_nH: "60",
           G2_rF: "data/tram4.wkt",
           G2_rT: "2",
           G3_ID: "w",
           G3_nH: "60",
           G3_rF: "data/tram10.wkt",
           G3_rT: "1",

           PreL: "13000",

           gHosts: 60,
           gBuffer: "5M",
           wTime: "0, 120",
           gTTL: 300,
           gSpeed: "0.5, 1.5",
           wSize: "4500, 3400",
           mInterval: "25, 35",
           mSize: "500k, 1M",
           traces: "None"
         })
       }

     } else {
       for (var i=0; i<dif; i++){
         this.OneConfig.pop();
       }


     }
     this.$forceUpdate();
   },
   dataG: function(val){
     let palette=["#FFADAD","#FFD6A5", "#FDFFB6", "#CAFFBF", "#9BF6FF", "#A0C4FF", "#BDB2FF", "#FFC6FF"]
     let oppo=Math.floor(palette.length/val.datasets.length)
     let colorpal=[]
     for (let i=0; i<val.datasets.length; i+=oppo){
       colorpal[i]=palette[i]
     }

     /**
     let chart = new frappe.Chart("#chart", {  // or a DOM element,
          // new Chart() in case of ES6 module with above usage
         title: "Delivery %",
         data: val,
         type: 'line', // or 'bar', 'line', 'scatter', 'pie', 'percentage'
         height: 800,
         truncateLegends: true,
         colors: colorpal,
         axisOptions: {
           xAxisMode: "span",
           yAxisMode: "span",
           xIsSeries: true
         },
         tooltipOptions: {
           formatTooltipX: (d) => (parseFloat(d).toFixed(2) + "").toUpperCase() + " seconds",
           formatTooltipY: (d) => parseFloat(d).toFixed(2) + " delivered/created"
         },
         lineOptions: {
           spline: false,
           hideDots: 1,
           heatline: 0
         }
       })
       **/
   }


 },
 template: `
 <button v-on:Click="graph"> jiji </button>
 <div id="chart"></div>

  <label v-if="!pressed" for="nSim">Number simulations: </label>
  <select v-if="!pressed" id="nSim" name="simulation values" form="form" v-model="Nsim">
    <option value="1" selected> 1 simulation </option>
    <option value="2"> 2 simulation </option>
    <option value="3"> 3 simulation </option>
    <option value="4"> 4 simulation </option>
    <option value="5"> 5 simulation </option>
    <option value="6"> 6 simulation </option>
    <option value="7"> 7 simulation </option>
    <option value="8"> 8 simulation </option>
  </select>

 <h1 v-if="!pressed" > Select the simulation configuration: </h1>

 <form v-if="!pressed" ref="form" v-on:submit.prevent="Confirm">




 <div style="display: flex;">
 <config class="uwu" v-if="Nsim>=1" v-on:eConfig="nSimU($event, 0)" pC="false"> </config>
 <config v-if="Nsim>=2" v-on:eConfig="nSimU($event, 1)" pC="true">> </config>
 <config v-if="Nsim>=3" v-on:eConfig="nSimU($event, 2)" pC="true">> </config>
 <config v-if="Nsim>=4" v-on:eConfig="nSimU($event, 3)" pC="true">> </config>
 <config v-if="Nsim>=5" v-on:eConfig="nSimU($event, 4)" pC="true">> </config>
 <config v-if="Nsim>=6" v-on:eConfig="nSimU($event, 5)" pC="true">> </config>
 <config v-if="Nsim>=7" v-on:eConfig="nSimU($event, 6)" pC="true">> </config>
 <config v-if="Nsim>=8" v-on:eConfig="nSimU($event, 7)" pC="true">> </config>
</div>


 <input class="start" type="submit" value="Start!">
 </form>


 <reports v-if="pressed" v-bind:Rep="dataReport"> </reports>
 <br>
 <form v-if="dataReport!='Charging'" ref="form" v-on:submit.prevent="dConfig()">
 <select class="form-control" name="template" v-model="Dselected">
    <option v-for="(item,index) in OneConfig" v-bind:value="index+1">
       {{ index+1}}
    </option>
</select>
 <input type="submit" value="Descarregar configuració">
 </form>

 <form v-if="dataReport!='Charging'" ref="form" v-on:submit.prevent="dReport()">
 <select class="form-control" name="template" v-model="Rselected">
    <option v-for="(item,index) in OneConfig" v-bind:value="index+1">
       {{ index+1}}
    </option>
</select>
 <input type="submit" value="Descarregar report">
 </form>

 <div id="popup" v-if="Premenu==true">
 <button id="D" v-on:click="dConfig(1)"> Download config files</button>
 <button id="S" v-on:click="Start()"> Start simulations</button>
 <button id="C" v-on:click="Premenu=false"> Cancel</button>
 </div>



 `


} //end options


const reports  = {
  props: ['Rep'],


  template: `
  <small> {{Rep}} </small>
   `

};

const config  = {
  data() {
    return {
      Config: {
        sTime: 43200,
        tRange: 10,
        tSpeed: "250k",

        Grout: "EpidemicRouter",
        nGroups: "1",
        G1_ID: "c",
        G1_nH: "60",
        G1_rF: "data/tram3.wkt",
        G1_rT: "1",
        G2_ID: "p",
        G2_nH: "60",
        G2_rF: "data/tram4.wkt",
        G2_rT: "2",
        G3_ID: "w",
        G3_nH: "60",
        G3_rF: "data/tram10.wkt",
        G3_rT: "1",

        PreL: "13000",

        gHosts: 60,
        gBuffer: "5M",
        wTime: "0, 120",
        gTTL: 300,
        gSpeed: "0.5, 1.5",
        wSize: "4500, 3400",
        mInterval: "25, 35",
        mSize: "500k, 1M",
        traces: "None"
      },
      taxi: false,
      pStyle: {},
    }
  },
  watch: {
    Config: {
      handler (o,n) {
        if(this.Config.traces=="taxi_february_1week_304nodes.txt"){
          this.taxi=true;
          this.Config.nGroups="1"
          this.Config.G1_nH="304"
        } else{
          this.taxi=false;
        }
        if(this.Config.traces=="RealityConnectionTraceFinal.txt"){
          this.Config.G1_nH="100"
        }
        //this.Config.gHosts=0
        switch (this.Config.nGroups) {
          case "1":
            this.Config.gHosts=this.Config.G1_nH*1;
            break;
          case "2": // foo es 0, por lo tanto se cumple la condición y se ejecutara el siguiente bloque
            this.Config.gHosts=this.Config.G1_nH*1+this.Config.G2_nH*1;
            break;
          case "3": // No hay sentencia "break" en el 'case 0:', por lo tanto este caso también será ejecutado
            this.Config.gHosts=this.Config.G1_nH*1+this.Config.G2_nH*1+this.Config.G3_nH*1;
            break; // Al encontrar un "break", no será ejecutado el 'case 2:'
          default:
            this.Config.gHosts=this.Config.G1_nH*1+this.Config.G2_nH*1+this.Config.G3_nH*1;
        }
      this.$emit('eConfig', this.Config)
      },
      deep: true,

    }
  },
  emits: ['eConfig'],
  props: ['pC'],
  created(){
    if(this.pC=="true"){
      this.pStyle={
        display: 'none',
        margin: '40px',
      }
    }
  },

  methods: {
    traced: function(n){
      return this.Config.nGroups>=n && this.Config.traces == "None" && this.taxi==false
    },
  },
  directives: {
    visible: {
      inserted: function(el, binding){
          el.style.visibility = !binding.value ? 'visible' : 'hidden';
      }
    }
  },
  template: `
  <div id="main">
  <label v-bind:style="pStyle" for="sTime">Simulation time: </label>
   <select id="time" name="time values" form="form" v-model="Config.sTime">
    <option value="36000" > 36000 seconds </option>
    <option value="43200" selected> 43200 seconds </option>
    <option value="54000"> 54000 seconds </option>
   </select>
 <br>
 <label v-bind:style="pStyle" for="tRange">Transmit range: </label>
  <select id="transmit" name="transmit values" form="form" v-model="Config.tRange">
   <option value="10" selected> 10 meters </option>
   <option value="50"> 50 meters </option>
   <option value="100"> 100 meters </option>
  </select>
 <br>
 <label v-bind:style="pStyle" for="tSpeed">Transmit speed: </label>
  <select id="transmit" name="transmit values" form="form" v-model="Config.tSpeed">
   <option value="125k"> 1 Mbps / 125 kBps </option>
   <option value="250k" selected> 2 Mbps / 250 kBps </option>
   <option value="650k"> 5 Mbps / 650 kBps </option>
  </select>
  <br>
  <label v-bind:style="pStyle" for="Grout">Group routing algorithm: </label>
   <select id="transmit" name="transmit values" form="form" v-model="Config.Grout">
    <option value="ProphetRouter"> Prophet </option>
    <option value="EpidemicRouter" selected> Epidemic </option>
    <option value="SprayAndWaitRouter"> Spray and wait router </option>
    <option value="ActiveRouter"> Active </option>
    <option value="DirectDeliveryRouter"> Direct delivery </option>
    <option value="EpidemicOracleRouter"> Epidemic Oracle </option>
    <option value="FirstContactRouter"> First contact </option>
    <option value="LifeRouter"> Life </option>
    <option value="MaxPropRouter"> Max prop </option>
    <option value="MaxPropRouterWithEstimation"> Max prop with estimation </option>
    <option value="MessageRouter"> Message </option>
    <option value="PassiveRouter"> Passive </option>
    <option value="ProphetRouterWithEstimation"> Prophet with estimation </option>
    <option value="ProphetV2Router"> Prophet V2 </option>
    <option value="WaveRouter"> Wave </option>
   </select>
   <br>
 <label v-bind:style="pStyle" v-if="!taxi" for="nGroups">Number of Groups: </label>
  <select v-if="!taxi" id="Groups" name="group number" form="form" v-model="Config.nGroups">
   <option value="1" selected> 1 Group </option>
   <option value="2" > 2 Groups </option>
   <option value="3" > 3 Groups </option>
  </select>
  <br v-if=!taxi>
 <label v-bind:style="pStyle" v-if="taxi" for="nGroups">Number of Groups: </label>
  <select v-if="taxi" id="Groups" name="group number" form="form" v-model="Config.nGroups">
   <option value="1" selected> 1 Group </option>
  </select>
  <br v-if=taxi>
 <label v-bind:style="pStyle" v-if="!taxi" for="nGroups"> Number of Hosts Group 1: </label>
  <select v-if="!taxi" id="groups" name="host number" form="form" v-model="Config.G1_nH">
   <option value="60" selected> 60 Hosts </option>
   <option value="80" > 80 Hosts </option>
   <option value="100" > 100 Hosts </option>
  </select>
  <br v-if=!taxi>
 <label v-bind:style="pStyle" v-if="taxi" for="nGroups"> Number of Hosts Group 1: </label>
  <select v-if="taxi" id="groups" name="host number" form="form" v-model="Config.G1_nH">
   <option value="304" selected> 304 Hosts </option>
  </select>
  <br v-if=taxi>
 <label v-bind:style="pStyle" for="nGroups"> Range Group 1: </label>
  <select :style="{visibility: traced(1) ? 'visible' : 'hidden'}" id="group" name="group range" form="form" v-model="Config.G1_rF">
   <option value="data/tram3.wkt" selected> Tram 3 </option>
   <option value="data/tram4.wkt" > Tram 4 </option>
   <option value="data/tram10.wkt" > Tram 10 </option>
  </select>
  <br>
 <label v-bind:style="pStyle" for="nGroups"> Route type Group 1: </label>
  <select :style="{visibility: traced(1) ? 'visible' : 'hidden'}" id="group" name="group range" form="form" v-model="Config.G1_rT">
   <option value="1" selected> Circular </option>
   <option value="2" > Ping-pong </option>
  </select>
  <br>
 <label v-bind:style="pStyle" for="nGroups"> Number of Hosts Group 2: </label>
  <select :style="{visibility: Config.nGroups>=2 ? 'visible' : 'hidden'}" id="groups" name="host number" form="form" v-model="Config.G2_nH">
   <option value="60" selected> 60 Hosts </option>
   <option value="80" > 80 Hosts </option>
   <option value="100" > 100 Hosts </option>
  </select>
  <br>
 <label v-bind:style="pStyle" for="nGroups"> Range Group 2: </label>
  <select :style="{visibility: traced(2) ? 'visible' : 'hidden'}" id="group" name="group range" form="form" v-model="Config.G2_rF">
   <option value="data/tram3.wkt" selected> Tram 3 </option>
   <option value="data/tram4.wkt" > Tram 4 </option>
   <option value="data/tram10.wkt" > Tram 10 </option>
  </select>
  <br>
 <label v-bind:style="pStyle" for="nGroups"> Route type Group 2: </label>
  <select :style="{visibility: traced(2) ? 'visible' : 'hidden'}" id="group" name="group range" form="form" v-model="Config.G2_rT">
   <option value="1" selected> Circular </option>
   <option value="2" > Ping-pong </option>
  </select>
  <br>
 <label v-bind:style="pStyle" for="nGroups"> Number of Hosts Group 3: </label>
  <select :style="{visibility: Config.nGroups>=3 ? 'visible' : 'hidden'}" id="groups" name="host number" form="form" v-model="Config.G3_nH">
   <option value="40" selected> 40 Hosts </option>
   <option value="60" > 60 Hosts </option>
   <option value="80" > 80 Hosts </option>
  </select>
  <br>
 <label v-bind:style="pStyle" for="nGroups"> Range Group 3: </label>
  <select :style="{visibility: traced(3) ? 'visible' : 'hidden'}" id="group" name="group range" form="form" v-model="Config.G3_rF">
   <option value="data/tram3.wkt" selected> Tram 3 </option>
   <option value="data/tram4.wkt" > Tram 4 </option>
   <option value="data/tram10.wkt" > Tram 10 </option>
  </select>
  <br>
 <label v-bind:style="pStyle" for="nGroups"> Route type Group 3: </label>
  <select :style="{visibility: traced(3) ? 'visible' : 'hidden'}" id="group" name="group range" form="form" v-model="Config.G3_rT">
   <option value="1" selected> Circular </option>
   <option value="2" > Ping-pong </option>
  </select>
  <br>
 <label v-bind:style="pStyle" for="gBuffer">Group buffer size: </label>
  <select id="group" name="group values" form="form" v-model="Config.gBuffer">
   <option value="2M"> 2 M </option>
   <option value="5M" selected> 5 M </option>
   <option value="10M"> 10 M </option>
  </select>
  <br>
 <label v-bind:style="pStyle" for="wTime">Group wait time: </label>
  <select id="group" name="group values" form="form" v-model="Config.wTime">
   <option value="0, 120" selected> 0 seconds to 120 seconds </option>
  </select>
  <br>
 <label v-bind:style="pStyle" for="gTTL">Group message TTL: </label>
  <select id="group" name="group values" form="form" v-model="Config.gTTL">
   <option value="120"> 2 hours </option>
   <option value="300" selected> 5 hours </option>
   <option value="420"> 7 hours </option>
  </select>
  <br>
 <label v-bind:style="pStyle" for="gSpeed">Group walking speed: </label>
  <select id="group" name="group values" form="form" v-model="Config.gSpeed">
   <option value="0.2, 1.0"> 0.2 to 1.0 m/sec </option>
   <option value="0.5, 1.5" selected> 0.5 to 1.5 m/sec </option>
   <option value="1.5, 2.5"> 1.5 to 2.5 m/sec </option>
  </select>
  <br>
 <label v-bind:style="pStyle" for="wSize">World size: </label>
  <select id="world" name="world values" form="form" v-model="Config.wSize">
   <option value="4500, 3400" selected> 4500 x 3400 meters </option>
   <option value="5625, 4250" selected> 5625 x 4250 meters </option>
   <option value="9000, 6800"> 9000 x 6800 meters </option>
  </select>
  <br>
 <label v-bind:style="pStyle" for="mInterval">Message creation interval: </label>
  <select id="interval" name="creation values" form="form" v-model="Config.mInterval">
   <option value="5, 15"> One new message every 5 to 15 seconds </option>
   <option value="25, 35" selected> One new message every 25 to 35 seconds </option>
   <option value="45, 55"> One new message every 45 to 55 seconds </option>
  </select>
  <br>
 <label v-bind:style="pStyle" for="mSize">Message sizes: </label>
  <select id="message size" name="creation values" form="form" v-model="Config.mSize">
   <option value="125k, 500k"> 125kB - 500kB </option>
   <option value="500k, 1M" selected> 500kB - 1MB </option>
   <option value="1M, 2M"> 1MB - 2MB </option>
  </select>
  <br>
 <label v-bind:style="pStyle" for="traces">Trace file: </label>
  <select id="trace file" name="creation values" form="form" v-model="Config.traces">
   <option value="asturies-er-1year-10m.one"> Asturies </option>
   <option value="Haggle3-Infocom5.csv" > H3-I5 </option>
   <option value="Haggle3-Infocom5-2.csv"> H3-I5-2 </option>
   <option value="haggle-one-cambridge-city-complete.tsv"> H1-Cambridge </option>
   <option value="RealityConnectionTraceFinal.txt"> Reality </option>
   <option value="taxi_february_1week_304nodes.txt"> Taxi </option>
   <option value="tor.csv"> Tor </option>
   <option value="None" selected> None </option>
  </select>
  <br>
 </div>
  `

};





console.log(frappe)
//const chart=frappe.
const app = Vue.createApp(rootComponent);

app.component('reports', reports);
app.component('config', config);


const vm = app.mount("#app");
